{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "adam.lee@cupix.com",
      "name" : "Adam Lee"
    },
    "title" : "CupixWorks SDK",
    "version" : "1.11.1"
  },
  "servers" : [ {
    "url" : "https://api.cupix.works/api/v1"
  } ],
  "paths" : {
    "/annotation_layers" : {
      "get" : {
        "operationId" : "annotationlayer_get_annotation_layers",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list",
        "tags" : [ "AnnotationLayer" ]
      },
      "post" : {
        "operationId" : "annotationlayer_create_annotation_layer",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/mock" : {
      "get" : {
        "operationId" : "annotationlayer_mock_annotation_layers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer mock list",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}" : {
      "delete" : {
        "operationId" : "annotationlayer_delete_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "get" : {
        "operationId" : "annotationlayer_get_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/associate_form_designs" : {
      "put" : {
        "operationId" : "annotation_layer_associate_form_design",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FormDesign IDs",
          "explode" : false,
          "in" : "query",
          "name" : "form_design_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate annotation_layer with form design",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotationlayer_clear_fields",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "description", "allowed_annotation_kind" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/deny" : {
      "put" : {
        "operationId" : "annotationlayer_deny_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/disassociate_form_designs" : {
      "put" : {
        "operationId" : "annotation_layer_disassociate_form_design",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FormDesign IDs",
          "explode" : false,
          "in" : "query",
          "name" : "form_design_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disassociate annotation_layer with form design",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/members" : {
      "get" : {
        "operationId" : "annotationlayer_get_members",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get annotation_layer members",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/meta" : {
      "get" : {
        "operationId" : "annotationlayer_get_meta",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer Meta",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_meta",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer Meta",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "annotationlayer_get_meta_by_key",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer Meta by key",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_meta_by_key",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer Meta by key",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/position" : {
      "put" : {
        "operationId" : "annotationlayer_update_position",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Layer Position",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/publish" : {
      "delete" : {
        "operationId" : "annotationlayer_unpublish_annotationlayer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_publish_annotationlayer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/purge" : {
      "delete" : {
        "operationId" : "annotationlayer_purge_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/share" : {
      "put" : {
        "operationId" : "annotationlayer_share_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/trash" : {
      "put" : {
        "operationId" : "annotationlayer_trash_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/unshare" : {
      "put" : {
        "operationId" : "annotationlayer_unshare_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed annotation_layer and return it.",
        "operationId" : "annotationlayer_untrash_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/authenticate" : {
      "post" : {
        "description" : "사용자 email, password, auth_param, refresh token 등을 이용하여 사용자를 인증한다.",
        "operationId" : "authenticate_authenticate",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AuthenticateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "summary" : "User Authentication",
        "tags" : [ "Authentication" ]
      }
    },
    "/captures" : {
      "get" : {
        "operationId" : "capture_get_captures",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture IDs",
          "explode" : false,
          "in" : "query",
          "name" : "edit_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "User ID",
          "explode" : true,
          "in" : "query",
          "name" : "user_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_capture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/mock" : {
      "get" : {
        "operationId" : "capture_mock_captures",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture mock list",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/with_materials" : {
      "post" : {
        "operationId" : "capture_create_capture_with_materials",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureWithMaterialsRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture With Materials",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}" : {
      "get" : {
        "operationId" : "capture_get_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/check_materials_uploading" : {
      "put" : {
        "operationId" : "capture_check_materials_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check capture materials uploading state",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/check_voxels_uploading" : {
      "put" : {
        "operationId" : "capture_check_voxels_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check capture voxels uploading",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/clear_fields" : {
      "put" : {
        "operationId" : "capture_clear_fields",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Capture fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "capture_get_entity_parameter",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture EntityParameter list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_entity_parameter",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture EntityParameter",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/events" : {
      "post" : {
        "operationId" : "capture_create_event",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomEventRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Event",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/invoke" : {
      "post" : {
        "description" : "invoke: https://cupixrnd.atlassian.net/browse/EINS-87 참조",
        "operationId" : "capture_invoke_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/measure_ready" : {
      "delete" : {
        "operationId" : "capture_delete_measure_ready",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Capture Measure Ready",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_measure_ready",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture Measure Ready",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/meta" : {
      "get" : {
        "operationId" : "capture_get_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Meta",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture Meta",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "capture_get_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Meta by key",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture Meta by key",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/publish" : {
      "delete" : {
        "operationId" : "capture_unpublish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_publish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/purge" : {
      "delete" : {
        "operationId" : "capture_purge_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/request_pointcloud_download" : {
      "post" : {
        "description" : "Request an email to download dollhouses",
        "operationId" : "capture_get_request_pointcloud_download",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "request an email to download dollhouses",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources" : {
      "get" : {
        "operationId" : "capture_get_resources",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Resources",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "capture_delete_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Capture Resource",
        "tags" : [ "Capture" ]
      },
      "get" : {
        "operationId" : "capture_get_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "capture_check_resource_uploading",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Capture Resource uploading",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/download" : {
      "get" : {
        "operationId" : "capture_download_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download URL"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "capture_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Resource upload url",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/trash" : {
      "put" : {
        "operationId" : "capture_trash_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed capture and return it.",
        "operationId" : "capture_untrash_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/voxels" : {
      "get" : {
        "description" : "Get capture voxels",
        "operationId" : "capture_get_voxels",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get capture voxels",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/voxels_upload_credentials" : {
      "post" : {
        "description" : "Capture voxels result 업로드를 위한 Credential을 생성",
        "operationId" : "capture_create_voxels_upload_credentials",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get capture voxels upload credentials",
        "tags" : [ "Capture" ]
      }
    },
    "/categories" : {
      "get" : {
        "operationId" : "category_get_categories",
        "parameters" : [ {
          "description" : "Category Type",
          "explode" : true,
          "in" : "query",
          "name" : "category_type",
          "required" : false,
          "schema" : {
            "enum" : [ "main", "sub" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "category list",
        "tags" : [ "Category" ]
      },
      "post" : {
        "operationId" : "category_create_category",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_bulk_category",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Category",
        "tags" : [ "Category" ]
      }
    },
    "/categories/bulk" : {
      "post" : {
        "operationId" : "category_bulk_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Category bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Category",
        "tags" : [ "Category" ]
      }
    },
    "/categories/mock" : {
      "get" : {
        "operationId" : "category_mock_categories",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "category mock list",
        "tags" : [ "Category" ]
      }
    },
    "/categories/{id}" : {
      "delete" : {
        "operationId" : "category_delete_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Category",
        "tags" : [ "Category" ]
      },
      "get" : {
        "operationId" : "category_get_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_update_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Category",
        "tags" : [ "Category" ]
      }
    },
    "/clusters" : {
      "get" : {
        "operationId" : "cluster_get_clusters",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterListResponse"
                }
              }
            },
            "description" : "Cluster list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Cluster list",
        "tags" : [ "Cluster" ]
      },
      "post" : {
        "operationId" : "cluster_create_cluster",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateClusterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/mock" : {
      "get" : {
        "operationId" : "cluster_mock_clusters",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterListResponse"
                }
              }
            },
            "description" : "Cluster list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Cluster mock list",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}" : {
      "delete" : {
        "operationId" : "cluster_delete_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster",
        "tags" : [ "Cluster" ]
      },
      "get" : {
        "operationId" : "cluster_get_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateClusterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/clear_fields" : {
      "put" : {
        "operationId" : "cluster_clear_fields",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Cluster fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "node_id", "parent_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/meta" : {
      "get" : {
        "operationId" : "cluster_get_meta",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Meta",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_meta",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Meta",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "cluster_get_meta_by_key",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Meta by key",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_meta_by_key",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Meta by key",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/parent" : {
      "delete" : {
        "description" : "Cluster parent 삭제 후 cluster 정보 반환",
        "operationId" : "cluster_delete_parent",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster Parent",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_parent",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateClusterParentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Parent",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources" : {
      "post" : {
        "operationId" : "cluster_create_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "cluster_delete_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster Resource",
        "tags" : [ "Cluster" ]
      },
      "get" : {
        "operationId" : "cluster_get_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "cluster_check_resource_uploading",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Cluster Resource uploading",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to cluster resource download link",
        "operationId" : "cluster_download_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "cluster_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster Resource upload url",
        "tags" : [ "Cluster" ]
      }
    },
    "/custom_properties" : {
      "get" : {
        "operationId" : "customproperty_get_custom_properties",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyListResponse"
                }
              }
            },
            "description" : "CustomProperty list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "custom_property list",
        "tags" : [ "CustomProperty" ]
      },
      "post" : {
        "operationId" : "customproperty_create_custom_property",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "put" : {
        "operationId" : "customproperty_bulk_custom_property",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk CustomProperty",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/custom_properties/mock" : {
      "get" : {
        "operationId" : "customproperty_mock_custom_properties",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyListResponse"
                }
              }
            },
            "description" : "CustomProperty list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "custom_property mock list",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/custom_properties/{id}" : {
      "delete" : {
        "operationId" : "customproperty_delete_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "get" : {
        "operationId" : "customproperty_get_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "put" : {
        "operationId" : "customproperty_update_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update CustomProperty",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/facilities/{key}/custom_properties/bulk" : {
      "post" : {
        "operationId" : "customproperty_bulk_create",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomPropertyBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "put" : {
        "operationId" : "customproperty_bulk_update",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustomPropertyBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "CustomProperty bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete CustomProperty",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/facilities/{key}/progresses/bulk" : {
      "post" : {
        "operationId" : "progress_bulk_create",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_bulk_update",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Progress bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/facilities/{key}/record_statuses/bulk" : {
      "post" : {
        "operationId" : "recordstatus_bulk_create",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_bulk_update",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "RecordStatus bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/form_designs/{id}/annotation_layers" : {
      "get" : {
        "operationId" : "formdesign_get_annotation_layers",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list with FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/levels" : {
      "get" : {
        "operationId" : "level_get_levels",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level list",
        "tags" : [ "Level" ]
      },
      "post" : {
        "operationId" : "level_create_level",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateLevelRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/mock" : {
      "get" : {
        "operationId" : "level_mock_levels",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level mock list",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}" : {
      "get" : {
        "operationId" : "level_get_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Level",
        "tags" : [ "Level" ]
      },
      "put" : {
        "operationId" : "level_update_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateLevelRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/availability_state" : {
      "put" : {
        "operationId" : "level_update_availability_state",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAvailabilityStateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Level Availability_state",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/clear_fields" : {
      "put" : {
        "operationId" : "level_clear_fields",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Level fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "default_floorplan" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear level's fields",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/publish" : {
      "delete" : {
        "operationId" : "level_unpublish_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Levels",
        "tags" : [ "Level" ]
      },
      "put" : {
        "operationId" : "level_publish_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Levels",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/purge" : {
      "delete" : {
        "operationId" : "level_purge_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/trash" : {
      "put" : {
        "operationId" : "level_trash_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed level and return it.",
        "operationId" : "level_untrash_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed level",
        "tags" : [ "Level" ]
      }
    },
    "/meshes" : {
      "get" : {
        "operationId" : "mesh_get_meshes",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh list",
        "tags" : [ "Mesh" ]
      },
      "post" : {
        "operationId" : "mesh_create_mesh",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMeshRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/mock" : {
      "get" : {
        "operationId" : "mesh_mock_meshes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh mock list",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}" : {
      "get" : {
        "operationId" : "mesh_get_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMeshRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/check_mesh_uploading" : {
      "put" : {
        "operationId" : "mesh_check_mesh_uploading",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check translated mesh uploading",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/check_resource_uploading" : {
      "put" : {
        "operationId" : "mesh_check_resource_uploading",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check mesh resource uploading",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/clear_fields" : {
      "put" : {
        "operationId" : "mesh_clear_fields",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Mesh fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/download" : {
      "get" : {
        "description" : "Redirect to mesh download link",
        "operationId" : "mesh_download_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to mesh download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh download",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/mesh_upload_credentials" : {
      "post" : {
        "description" : "Mesh result 업로드를 위한 Credential을 생성",
        "operationId" : "mesh_create_mesh_upload_credentials",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh Upload Credentials",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/meta" : {
      "get" : {
        "operationId" : "mesh_get_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh Meta",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh Meta",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "mesh_get_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh Meta by key",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh Meta",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/publish" : {
      "delete" : {
        "operationId" : "mesh_unpublish_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Mesh",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_publish_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/purge" : {
      "delete" : {
        "operationId" : "mesh_purge_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/trash" : {
      "put" : {
        "operationId" : "mesh_trash_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed mesh and return it.",
        "operationId" : "mesh_untrash_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.",
        "operationId" : "mesh_create_upload_url",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh upload url",
        "tags" : [ "Mesh" ]
      }
    },
    "/panos" : {
      "get" : {
        "operationId" : "pano_get_panos",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pano IDs",
          "explode" : false,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano list",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_bulk_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkPanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/bulk_update" : {
      "put" : {
        "operationId" : "pano_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkUpdatePanoRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Panos updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/mock" : {
      "get" : {
        "operationId" : "pano_mock_panos",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano mock list",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/upload_candidates" : {
      "get" : {
        "operationId" : "pano_get_panos_to_upload",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano upload candidates",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}" : {
      "delete" : {
        "operationId" : "pano_delete_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pano",
        "tags" : [ "Pano" ]
      },
      "get" : {
        "operationId" : "pano_get_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/actions/{action_name}/complete" : {
      "put" : {
        "operationId" : "pano_complete_action",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Complete action",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/actions/{action_name}/running" : {
      "put" : {
        "operationId" : "pano_running_action",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Running action",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_mask_uploading" : {
      "put" : {
        "operationId" : "pano_check_mask_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "mask Type",
          "explode" : true,
          "in" : "query",
          "name" : "mask_type",
          "required" : false,
          "schema" : {
            "enum" : [ "face", "body", "facebody", "custom" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaskResponse"
                }
              }
            },
            "description" : "Mask"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano mask uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_tile_uploading" : {
      "put" : {
        "operationId" : "pano_check_tile_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_uploading" : {
      "put" : {
        "operationId" : "pano_check_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/clear_fields" : {
      "put" : {
        "operationId" : "pano_clear_fields",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Pano fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "mask_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/download" : {
      "get" : {
        "description" : "Redirect to pano download link",
        "operationId" : "pano_download_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to pano download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano download",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "pano_get_entity_parameter",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano EntityParameter list",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_entity_parameter",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano EntityParameter",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/mask_upload_url" : {
      "post" : {
        "operationId" : "pano_create_mask_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "mask Type",
          "explode" : true,
          "in" : "query",
          "name" : "mask_type",
          "required" : false,
          "schema" : {
            "enum" : [ "face", "body", "facebody", "custom" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaskResponse"
                }
              }
            },
            "description" : "Mask"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano mask upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/meta" : {
      "get" : {
        "operationId" : "pano_get_meta",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Meta",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_meta",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano Meta",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "pano_get_meta_by_key",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Meta by key",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_meta_by_key",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano Meta",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/publish" : {
      "delete" : {
        "operationId" : "pano_unpublish_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_publish_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources" : {
      "get" : {
        "operationId" : "pano_get_resources",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Resources",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "pano_delete_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pano Resource",
        "tags" : [ "Pano" ]
      },
      "get" : {
        "operationId" : "pano_get_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "pano_check_resource_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Pano Resource uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to pano resource download link",
        "operationId" : "pano_download_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "pano_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano Resource upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/stitched" : {
      "put" : {
        "operationId" : "pano_update_pano_stitched",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePanoStitchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update pano stitched",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/tile_upload_credentials" : {
      "post" : {
        "description" : "Tile 업로드를 위한 Credential을 생성",
        "operationId" : "pano_create_tile_upload_credentials",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano Tile Upload Credentials",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.  merge_from: option_params 에 파노 ID를 입력하며, 입력된 파노가 현재 파노와 병합된다. 이 때, 현재 파노와 입력된 파노의 Resource는 현재 파노의 MultiResource가 되며, 각 master, slave 값을 갖는다. 두 파노의 버전이 1 이상이거나, 각 파노의 state가 resource_uploaded가 아니거나, 입력된 파노와 현재 파노의 캡쳐가 다르면 에러를 내려준다. 한 번 병합된 파노는 다시 분리할 수 없다. move_out_resource: 현재 파노의 Resource를 MultiResource로 이동시키며, 이 때 kind가 될 값을 option_params에서 입력받는다. 이후 이 파노의 새 Resource에 업로드할 수 있는 upload_url 을 제공한다.",
        "operationId" : "pano_create_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/pointclouds" : {
      "get" : {
        "operationId" : "pointcloud_get_pointclouds",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Parent IDs",
          "explode" : false,
          "in" : "query",
          "name" : "parent_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Cluster ID",
          "explode" : true,
          "in" : "query",
          "name" : "cluster_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud list",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_pointcloud",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/mock" : {
      "get" : {
        "operationId" : "pointcloud_mock_pointclouds",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud mock list",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}" : {
      "get" : {
        "operationId" : "pointcloud_get_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_octree_uploading" : {
      "put" : {
        "operationId" : "pointcloud_octree_check_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud octree uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_voxels_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_voxels_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud voxels uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/clear_fields" : {
      "put" : {
        "operationId" : "pointcloud_clear_fields",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Pointcloud fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/download" : {
      "get" : {
        "description" : "Redirect to pointcloud download link",
        "operationId" : "pointcloud_download_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to pointcloud download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud download",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "pointcloud_get_entity_parameters",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud EntityParameter list",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_entity_parameter",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud EntityParameter",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/invoke" : {
      "post" : {
        "operationId" : "pointcloud_invoke_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/meta" : {
      "get" : {
        "operationId" : "pointcloud_get_meta",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_meta",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "pointcloud_get_meta_by_key",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Meta by key",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_meta_by_key",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/octree_upload_url" : {
      "post" : {
        "operationId" : "pointcloud_create_octree_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud octree upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/potree_upload_credentials" : {
      "post" : {
        "description" : "Potree 업로드를 위한 Credential을 생성",
        "operationId" : "pointcloud_create_potree_upload_credentials",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud Potree Upload Credentials",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/publish" : {
      "delete" : {
        "operationId" : "pointcloud_unpublish_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Pointcloud",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_publish_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/purge" : {
      "delete" : {
        "operationId" : "pointcloud_purge_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources" : {
      "get" : {
        "operationId" : "pointcloud_get_resources",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Resources",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePointcloudResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "pointcloud_delete_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      },
      "get" : {
        "operationId" : "pointcloud_get_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_resource_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Pointcloud Resource uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to pointcloud resource download link",
        "operationId" : "pointcloud_download_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "pointcloud_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud Resource upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/trash" : {
      "put" : {
        "operationId" : "pointcloud_trash_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed pointcloud and return it.",
        "operationId" : "pointcloud_untrash_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.",
        "operationId" : "pointcloud_create_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/voxels" : {
      "get" : {
        "description" : "Get pointcloud voxels",
        "operationId" : "pointcloud_get_voxels",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get pointcloud voxels",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/voxels_upload_credentials" : {
      "post" : {
        "description" : "Pointcloud voxels result 업로드를 위한 Credential을 생성",
        "operationId" : "pointcloud_create_voxels_upload_credentials",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get pointcloud voxels upload credentials",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/progresses" : {
      "get" : {
        "operationId" : "progress_get_progresses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID",
          "explode" : true,
          "in" : "query",
          "name" : "sketch_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress list",
        "tags" : [ "Progress" ]
      },
      "post" : {
        "operationId" : "progress_create_progress",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_bulk_progress",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/mock" : {
      "get" : {
        "operationId" : "progress_mock_progresses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress mock list",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/scroll" : {
      "get" : {
        "operationId" : "progress_scroll_progresses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress all list",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}" : {
      "delete" : {
        "operationId" : "progress_delete_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Progress",
        "tags" : [ "Progress" ]
      },
      "get" : {
        "operationId" : "progress_get_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}/meta" : {
      "get" : {
        "operationId" : "progress_get_meta",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_meta",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "progress_get_meta_by_key",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta by key",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_meta_by_key",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta",
        "tags" : [ "Progress" ]
      }
    },
    "/reality_captures" : {
      "get" : {
        "operationId" : "reality_capture_get_reality_captures",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Cluster ID",
          "explode" : true,
          "in" : "query",
          "name" : "cluster_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RealityCaptureListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reality Capture list",
        "tags" : [ "RealityCapture" ]
      }
    },
    "/record_statuses" : {
      "get" : {
        "operationId" : "recordstatus_get_record_statuses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status list",
        "tags" : [ "RecordStatus" ]
      },
      "post" : {
        "operationId" : "recordstatus_create_record_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_bulk_record_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/mock" : {
      "get" : {
        "operationId" : "recordstatus_mock_record_statuses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status mock list",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/scroll" : {
      "get" : {
        "operationId" : "recordstatus_scroll_record_statuses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status all list",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/update_or_create" : {
      "post" : {
        "operationId" : "recordstatus_update_or_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update if present, Create if not",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}" : {
      "delete" : {
        "operationId" : "recordstatus_delete_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "get" : {
        "operationId" : "recordstatus_get_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}/meta" : {
      "get" : {
        "operationId" : "recordstatus_get_meta",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_meta",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "recordstatus_get_meta_by_key",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus Meta by key",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_meta_by_key",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/records" : {
      "get" : {
        "description" : "`facility_key`가 있는 경우 해당 Facility에 포함된 Records 조회.",
        "operationId" : "record_get_records",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record list",
        "tags" : [ "Record" ]
      },
      "post" : {
        "description" : "Create new Record for Facility. Record has specific date which called `captured_at`.",
        "operationId" : "record_create_record",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/mock" : {
      "get" : {
        "operationId" : "record_mock_records",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record mock list",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}" : {
      "get" : {
        "operationId" : "record_get_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Record",
        "tags" : [ "Record" ]
      },
      "put" : {
        "operationId" : "record_update_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/clear_fields" : {
      "put" : {
        "operationId" : "record_clear_fields",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Record fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "note" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/deny" : {
      "put" : {
        "operationId" : "record_deny_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/flush_geo_coordinate" : {
      "put" : {
        "operationId" : "record_flush_geo_coordinate",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Flush geo_coordinate_url",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/flush_siteinsights_report" : {
      "put" : {
        "description" : "Upload siteinsights report",
        "operationId" : "record_flush_siteinsights_report",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/invoke" : {
      "post" : {
        "description" : "invoke: https://cupixrnd.atlassian.net/browse/TSLA-1256",
        "operationId" : "record_invoke_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/members" : {
      "get" : {
        "operationId" : "record_get_members",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get record members",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/purge" : {
      "delete" : {
        "operationId" : "record_purge_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/refresh" : {
      "put" : {
        "operationId" : "record_refresh_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Refresh Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/share" : {
      "put" : {
        "operationId" : "record_share_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/trash" : {
      "put" : {
        "operationId" : "record_trash_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/unshare" : {
      "put" : {
        "operationId" : "record_unshare_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed record and return it.",
        "operationId" : "record_untrash_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed record",
        "tags" : [ "Record" ]
      }
    },
    "/reviews/{review_key}/annotation_layers" : {
      "get" : {
        "operationId" : "review_get_annotation_layers",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotation_layers/{id}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Review AnnotationLayer",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review AnnotationLayer",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review AnnotationLayer",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/captures" : {
      "get" : {
        "operationId" : "review_get_captures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories" : {
      "get" : {
        "operationId" : "review_get_categories",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category Type",
          "explode" : true,
          "in" : "query",
          "name" : "category_type",
          "required" : false,
          "schema" : {
            "enum" : [ "main", "sub" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Category list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Category of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Category",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Category bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Category",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories/{id}" : {
      "get" : {
        "operationId" : "review_get_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Category",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Category",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/custom_properties" : {
      "get" : {
        "operationId" : "review_get_custom_properties",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyListResponse"
                }
              }
            },
            "description" : "CustomProperty list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "CustomProperty list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_custom_property",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk CustomProperty of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/custom_properties/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_custom_property",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomPropertyBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create CustomProperty",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_custom_property",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustomPropertyBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "CustomProperty bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete CustomProperty",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/custom_properties/{id}" : {
      "get" : {
        "operationId" : "review_get_custom_property",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get CustomProperty",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_custom_property",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update CustomProperty",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/levels" : {
      "get" : {
        "operationId" : "review_get_levels",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/meshes" : {
      "get" : {
        "operationId" : "review_get_meshes",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos" : {
      "get" : {
        "operationId" : "review_get_panos",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aread ID list",
          "explode" : false,
          "in" : "query",
          "name" : "area_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pano IDs",
          "explode" : false,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_pano",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkPanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Pano of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos/bulk_update" : {
      "put" : {
        "operationId" : "review_bulk_update_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkUpdatePanoRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Panos updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update Pano",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos/{id}" : {
      "get" : {
        "operationId" : "review_get_pano",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/pointclouds" : {
      "get" : {
        "operationId" : "review_get_pointclouds",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Parent IDs",
          "explode" : false,
          "in" : "query",
          "name" : "parent_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses" : {
      "get" : {
        "operationId" : "review_get_progresses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID",
          "explode" : true,
          "in" : "query",
          "name" : "sketch_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Progress list of review",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Progress of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Progress bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Progress on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}" : {
      "delete" : {
        "operationId" : "review_delete_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Progress on Review",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}/meta" : {
      "get" : {
        "operationId" : "review_get_progress_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_get_progress_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta by key on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/reality_captures" : {
      "get" : {
        "operationId" : "review_get_reality_captures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RealityCaptureListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "RealityCapture list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses" : {
      "get" : {
        "operationId" : "review_get_record_statuses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "RecordStatus list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk RecordStatus of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create RecordStatus",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "RecordStatus bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete RecordStatus",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/update_or_create" : {
      "post" : {
        "operationId" : "review_recordstatus_update_or_create",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update if present, Create if not",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/{id}" : {
      "get" : {
        "operationId" : "review_get_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/records" : {
      "get" : {
        "description" : "Retrieve record list which included in review.",
        "operationId" : "review_get_records",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses" : {
      "get" : {
        "operationId" : "review_get_statuses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusListResponse"
                }
              }
            },
            "description" : "Status list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Status list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}" : {
      "get" : {
        "operationId" : "review_get_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}/meta" : {
      "get" : {
        "operationId" : "review_status_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_status_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_status_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_status_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows" : {
      "get" : {
        "operationId" : "review_get_workflows",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Workflow",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_workflow",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workflow list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/textures" : {
      "get" : {
        "operationId" : "review_workflow_get_workflow_textures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
                }
              }
            },
            "description" : "Texture Ids for each Workflows"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get texture_ids for each workflows",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}" : {
      "get" : {
        "operationId" : "review_get_workflow",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_workflow",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}/clear_fields" : {
      "put" : {
        "operationId" : "review_workflow_clear_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "texture_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}/textures" : {
      "get" : {
        "operationId" : "review_workflow_get_textures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow's textures",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{kind}" : {
      "get" : {
        "operationId" : "review_get_workflows_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow by kind",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_workflow_with_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow with kind",
        "tags" : [ "Review" ]
      }
    },
    "/sessions" : {
      "delete" : {
        "description" : "현재 세션을 삭제하여 로그아웃 한다. 이후에는 이 세션으로부터 생성된 모든 access token 또는 refresh token을 사용할 수 없다.",
        "operationId" : "session_delete_session",
        "responses" : {
          "204" : {
            "description" : "Session destroyed"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Session Destroy",
        "tags" : [ "Session" ]
      },
      "get" : {
        "description" : "현재 사용자의 세션을 전달하며, 현재 팀, 현재 워크스페이스 등의 내용을 포함한다.",
        "operationId" : "session_get_session",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResponse"
                }
              }
            },
            "description" : "Session"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get current session",
        "tags" : [ "Session" ]
      }
    },
    "/sessions/sagemaker_invoke_credentials" : {
      "post" : {
        "description" : "Sagemaker의 endpoint를 invoke하기 위한 임시 credential 생성",
        "operationId" : "session_create_sagemaker_invoke_credentials",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsCredentialsResponse"
                }
              }
            },
            "description" : "AWS Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sagemaker Invoke Credentials",
        "tags" : [ "Session" ]
      }
    },
    "/statuses" : {
      "get" : {
        "operationId" : "status_get_statuses",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusListResponse"
                }
              }
            },
            "description" : "Status list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "status list",
        "tags" : [ "Status" ]
      },
      "post" : {
        "operationId" : "status_create_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Status",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}" : {
      "delete" : {
        "operationId" : "status_delete_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Status",
        "tags" : [ "Status" ]
      },
      "get" : {
        "operationId" : "status_get_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/meta" : {
      "get" : {
        "operationId" : "status_get_meta",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_meta",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "status_get_meta_by_key",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta by key",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_meta_by_key",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/position" : {
      "put" : {
        "operationId" : "status_update_position",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Position",
        "tags" : [ "Status" ]
      }
    },
    "/videos" : {
      "get" : {
        "operationId" : "video_get_videos",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video list",
        "tags" : [ "Video" ]
      },
      "post" : {
        "operationId" : "video_create_video",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateVideoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/mock" : {
      "get" : {
        "operationId" : "video_mock_videos",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video mock list",
        "tags" : [ "Video" ]
      }
    },
    "/videos/upload_candidates" : {
      "get" : {
        "operationId" : "video_get_videos_to_upload",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video upload candidates",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}" : {
      "delete" : {
        "operationId" : "video_delete_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Video",
        "tags" : [ "Video" ]
      },
      "get" : {
        "operationId" : "video_get_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Video",
        "tags" : [ "Video" ]
      },
      "put" : {
        "operationId" : "video_update_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateVideoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/check_uploading" : {
      "put" : {
        "operationId" : "video_check_uploading",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check video uploading",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/clear_fields" : {
      "put" : {
        "operationId" : "video_clear_fields",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Video fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/download" : {
      "get" : {
        "description" : "Redirect video resource",
        "operationId" : "video_download_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirects Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/upload_credentials" : {
      "post" : {
        "description" : "Video 업로드를 위한 Credential을 생성",
        "operationId" : "video_create_upload_credentials",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Video Upload Credentials",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/upload_url" : {
      "post" : {
        "operationId" : "video_create_upload_url",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video upload url",
        "tags" : [ "Video" ]
      }
    },
    "/workflows" : {
      "get" : {
        "operationId" : "workflow_get_workflows",
        "parameters" : [ {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Workflow",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_workflow",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "workflow list",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_workflow",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/mock" : {
      "get" : {
        "operationId" : "workflow_mock_workflows",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "workflow mock list",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/textures" : {
      "get" : {
        "operationId" : "workflow_get_workflow_textures",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
                }
              }
            },
            "description" : "Texture Ids for each Workflows"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get texture_ids for each workflows",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}" : {
      "delete" : {
        "operationId" : "workflow_delete_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Workflow",
        "tags" : [ "Workflow" ]
      },
      "get" : {
        "operationId" : "workflow_get_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/clear_fields" : {
      "put" : {
        "operationId" : "workflow_clear_fields",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "texture_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/meta" : {
      "get" : {
        "operationId" : "workflow_get_meta",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow Meta",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_meta",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Meta",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "workflow_get_meta_by_key",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow Meta by key",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_meta_by_key",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Meta",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/position" : {
      "put" : {
        "operationId" : "workflow_update_position",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Position",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/textures" : {
      "get" : {
        "operationId" : "workflow_get_textures",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow's textures",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_texture",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowTextureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow's textures",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/textures/{texture_id}" : {
      "delete" : {
        "operationId" : "workflow_delete_textures",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Workflow's textures",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{kind}" : {
      "get" : {
        "operationId" : "workflow_get_workflows_by_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow by kind",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_workflow_with_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow with kind",
        "tags" : [ "Workflow" ]
      }
    }
  },
  "components" : {
    "callbacks" : { },
    "examples" : { },
    "headers" : { },
    "links" : { },
    "parameters" : {
      "actionNamePathParam" : {
        "description" : "Action Name",
        "explode" : false,
        "in" : "path",
        "name" : "action_name",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "aggsQueryParam" : {
        "description" : "Aggregation",
        "explode" : true,
        "in" : "query",
        "name" : "aggs",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "annotationLayerClearFieldsParam" : {
        "description" : "AnnotationLayer fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "description", "allowed_annotation_kind" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "areaIdsQueryParam" : {
        "description" : "Aread ID list",
        "explode" : false,
        "in" : "query",
        "name" : "area_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "bimIdQueryParam" : {
        "description" : "Bim ID",
        "explode" : true,
        "in" : "query",
        "name" : "bim_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "captureClearFieldsParam" : {
        "description" : "Capture fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "captureIdQueryParam" : {
        "description" : "Capture ID",
        "explode" : true,
        "in" : "query",
        "name" : "capture_id",
        "required" : false,
        "schema" : {
          "type" : "integer"
        },
        "style" : "form"
      },
      "captureIdRequiredQueryParam" : {
        "description" : "Capture ID",
        "explode" : true,
        "in" : "query",
        "name" : "capture_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "categoryIdQueryParam" : {
        "description" : "Category ID",
        "explode" : true,
        "in" : "query",
        "name" : "category_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "categoryTypeQueryParam" : {
        "description" : "Category Type",
        "explode" : true,
        "in" : "query",
        "name" : "category_type",
        "required" : false,
        "schema" : {
          "enum" : [ "main", "sub" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "clusterClearFieldsParam" : {
        "description" : "Cluster fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "node_id", "parent_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "clusterIdQueryParam" : {
        "description" : "Cluster ID",
        "explode" : true,
        "in" : "query",
        "name" : "cluster_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "editCaptureIdsQueryParam" : {
        "description" : "Capture IDs",
        "explode" : false,
        "in" : "query",
        "name" : "edit_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "facilityKeyQueryParam" : {
        "description" : "Facility key",
        "explode" : true,
        "in" : "query",
        "name" : "facility_key",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "fieldsParam" : {
        "description" : "Fields list to response",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "filterParam" : {
        "description" : "Filter",
        "explode" : false,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "items" : {
            "example" : "capture_id=1",
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "formDesignIdsRequiredQueryParam" : {
        "description" : "FormDesign IDs",
        "explode" : false,
        "in" : "query",
        "name" : "form_design_ids",
        "required" : true,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "fromAtParam" : {
        "description" : "UTC+0 based. Must be used together with `to_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "from_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "groupIdsQueryParam" : {
        "description" : "Group ID list",
        "explode" : false,
        "in" : "query",
        "name" : "group_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "idOfAnnotationLayerPathParam" : {
        "description" : "AnnotationLayer ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCapturePathParam" : {
        "description" : "Capture ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCategoryPathParam" : {
        "description" : "Category ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfClusterPathParam" : {
        "description" : "Cluster ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCustomPropertyPathParam" : {
        "description" : "CustomProperty ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFormDesignPathParam" : {
        "description" : "FormDesign ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfLevelPathParam" : {
        "description" : "Level ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfMeshPathParam" : {
        "description" : "Mesh ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPanoPathParam" : {
        "description" : "Pano ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPointcloudPathParam" : {
        "description" : "Pointcloud ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfProgressPathParam" : {
        "description" : "Progress ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfRecordPathParam" : {
        "description" : "Record ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfRecordStatusPathParam" : {
        "description" : "RecordStatus ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfStatusPathParam" : {
        "description" : "Status ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfVideoPathParam" : {
        "description" : "Video ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkflowPathParam" : {
        "description" : "Workflow ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkflowQueryParam" : {
        "description" : "Workflow ID",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfWorkflowRequiredQueryParam" : {
        "description" : "Workflow ID",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idsOfPanoQueryParam" : {
        "description" : "Pano IDs",
        "explode" : false,
        "in" : "query",
        "name" : "ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "isSystemWorkflowQueryParam" : {
        "description" : "True if System Workflow",
        "explode" : true,
        "in" : "query",
        "name" : "is_system_workflow",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "keyOfFacilityPathParam" : {
        "description" : "Facility key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "kindOfResourcePathParam" : {
        "description" : "Resource kind",
        "explode" : false,
        "in" : "path",
        "name" : "kind",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "kindParam" : {
        "explode" : true,
        "in" : "query",
        "name" : "kind",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "kindPathParam" : {
        "explode" : false,
        "in" : "path",
        "name" : "kind",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "levelClearFieldsParam" : {
        "description" : "Level fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "default_floorplan" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "levelIdQueryParam" : {
        "description" : "Level ID",
        "explode" : true,
        "in" : "query",
        "name" : "level_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "levelIdsQueryParam" : {
        "description" : "Level ID list",
        "explode" : false,
        "in" : "query",
        "name" : "level_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "maskTypeParam" : {
        "description" : "mask Type",
        "explode" : true,
        "in" : "query",
        "name" : "mask_type",
        "required" : false,
        "schema" : {
          "enum" : [ "face", "body", "facebody", "custom" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "memberDisplayOptionParam" : {
        "description" : "Memeber display option",
        "explode" : true,
        "in" : "query",
        "name" : "display_option",
        "required" : true,
        "schema" : {
          "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "meshClearFieldsParam" : {
        "description" : "Mesh fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "metaKeyPathParam" : {
        "description" : "Meta key",
        "explode" : false,
        "in" : "path",
        "name" : "meta_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "minPermissionQueryParam" : {
        "description" : "minimum permission",
        "explode" : true,
        "in" : "query",
        "name" : "min_permission",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "orderParam" : {
        "description" : "Field name to order",
        "explode" : true,
        "in" : "query",
        "name" : "order_by",
        "required" : false,
        "schema" : {
          "example" : "created_at",
          "type" : "string"
        },
        "style" : "form"
      },
      "pageParam" : {
        "description" : "Page number",
        "explode" : true,
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "panoClearFieldsParam" : {
        "description" : "Pano fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "mask_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "parentIdParam" : {
        "description" : "Parent ID",
        "explode" : true,
        "in" : "query",
        "name" : "parent_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "parentIdsParam" : {
        "description" : "Parent IDs",
        "explode" : false,
        "in" : "query",
        "name" : "parent_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "perPageParam" : {
        "description" : "Item count per page",
        "explode" : true,
        "in" : "query",
        "name" : "per_page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "pointcloudClearFieldsParam" : {
        "description" : "Pointcloud fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "pointcloudTypeQueryParam" : {
        "description" : "Pointcloud Type",
        "explode" : true,
        "in" : "query",
        "name" : "pointcloud_type",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/PointcloudType"
        },
        "style" : "form"
      },
      "progressIdsQueryParam" : {
        "description" : "Progress ID list",
        "explode" : false,
        "in" : "query",
        "name" : "progress_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "recordClearFieldsParam" : {
        "description" : "Record fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "note" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "recordIdQueryParam" : {
        "description" : "Record ID",
        "explode" : true,
        "in" : "query",
        "name" : "record_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "recordIdsQueryParam" : {
        "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
        "explode" : false,
        "in" : "query",
        "name" : "record_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "reviewKeyPathParam" : {
        "description" : "Review key",
        "explode" : false,
        "in" : "path",
        "name" : "review_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "revisionTypeParam" : {
        "description" : "Revision Type",
        "explode" : true,
        "in" : "query",
        "name" : "revision_type",
        "required" : false,
        "schema" : {
          "enum" : [ "enhanced_image", "normal" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "searchParam" : {
        "description" : "Search query",
        "explode" : true,
        "in" : "query",
        "name" : "q",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "sketchIdQueryParam" : {
        "description" : "Sketch ID",
        "explode" : true,
        "in" : "query",
        "name" : "sketch_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "sortParam" : {
        "description" : "Sort direction",
        "explode" : true,
        "in" : "query",
        "name" : "sort",
        "required" : false,
        "schema" : {
          "example" : "desc",
          "type" : "string"
        },
        "style" : "form"
      },
      "statusIdsQueryParam" : {
        "description" : "Status ID list",
        "explode" : false,
        "in" : "query",
        "name" : "status_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "textureIdPathParam" : {
        "description" : "Texture ID",
        "explode" : false,
        "in" : "path",
        "name" : "texture_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "toAtParam" : {
        "description" : "UTC+0 based. Must be used together with `from_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "to_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "updatedSinceParam" : {
        "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
        "explode" : false,
        "in" : "header",
        "name" : "X-CUPIX-UPDATED-SINCE",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "simple"
      },
      "useDraftReviewQueryParam" : {
        "description" : "Use draft review",
        "explode" : true,
        "in" : "query",
        "name" : "use_draft_on_review",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "userIdQueryParam" : {
        "description" : "User ID",
        "explode" : true,
        "in" : "query",
        "name" : "user_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "userIdsQueryParam" : {
        "description" : "User ID list",
        "explode" : false,
        "in" : "query",
        "name" : "user_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "videoClearFieldsParam" : {
        "description" : "Video fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "visibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "workflowClearFieldsParam" : {
        "description" : "Workflow fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "texture_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workflowIdsQueryParam" : {
        "description" : "Workflow ID list",
        "explode" : false,
        "in" : "query",
        "name" : "workflow_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workflowTypesQueryParam" : {
        "description" : "Workflow Type list",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_types",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workspaceIdQueryParam" : {
        "description" : "Workspace ID",
        "explode" : true,
        "in" : "query",
        "name" : "workspace_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      }
    },
    "requestBodies" : {
      "AuthenticateRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticateRequest"
            }
          }
        },
        "description" : "email: 사용자의 email/password로 로그인 한다. team_id를 반드시 입력해야 한다. refresh_token: refresh_token으로 새 access token을 요청한다. auth_params: 서버가 제공한 authentication parameters 로 조합된 signature로 인증을 요청한다. token, signature, signed_signupature, timestamp 등을 입력해야 한다. access_code: 특정 target(e.g., Capture)을 위한 access_code를 통해 인증한다. Backoffice를 통해 발급 받아 사용.\n",
        "required" : true
      },
      "BulkCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "BulkCustomPropertyRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkCustomPropertyRequest"
            }
          }
        },
        "required" : true
      },
      "BulkPanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkPanoRequest"
            }
          }
        },
        "required" : true
      },
      "BulkProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkProgressRequest"
            }
          }
        },
        "required" : true
      },
      "BulkRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "BulkUpdatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkUpdatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAnnotationLayerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAnnotationLayerRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureWithMaterialsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCategoryBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCategoryBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "CreateClusterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateClusterRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomEventRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomEventRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomPropertyBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomPropertyBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomPropertyRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomPropertyRequest"
            }
          }
        },
        "required" : true
      },
      "CreateEntityParameterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateEntityParameterRequest"
            }
          }
        },
        "required" : true
      },
      "CreateLevelRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateLevelRequest"
            }
          }
        },
        "required" : true
      },
      "CreateMeshRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMeshRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePointcloudResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePointcloudResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateProgressBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateProgressBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateProgressRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordStatusBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordStatusBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "CreateResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateStatusRequest"
            }
          }
        },
        "required" : true
      },
      "CreateUploadUrlRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateUploadUrlRequest"
            }
          }
        },
        "required" : true
      },
      "CreateVideoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateVideoRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkflowRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkflowRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkflowTextureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkflowTextureRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "InvokePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeRecordRequest"
            }
          }
        },
        "required" : true
      },
      "ShareRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationLayerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationLayerRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAvailabilityStateRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAvailabilityStateRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCategoryBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCategoryBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateClusterParentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterParentRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateClusterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCustomPropertyBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCustomPropertyBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCustomPropertyRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCustomPropertyRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateLevelRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateLevelRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMeshRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateMeshRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMetaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object"
            }
          }
        },
        "required" : true
      },
      "UpdatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePanoStitchRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePanoStitchRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePositionRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePositionRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateProgressBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateProgressBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateProgressRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordStatusBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateStatusRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateVideoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateVideoRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateVideoRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkflowRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkflowRequest"
            }
          }
        },
        "required" : true
      }
    },
    "responses" : {
      "400BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description" : "Bad Request"
      },
      "401Unauthorized" : {
        "description" : "Unauthorized request"
      },
      "403PermissionDenied" : {
        "description" : "Permission denied"
      },
      "404NotFound" : {
        "description" : "Not found"
      },
      "AnnotationLayerListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationLayerListResponse"
            }
          }
        },
        "description" : "AnnotationLayer list"
      },
      "AnnotationLayerResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationLayerResponse"
            }
          }
        },
        "description" : "AnnotationLayer"
      },
      "AuthenticateResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticateResponse"
            }
          }
        },
        "description" : "Authentication"
      },
      "AwsCredentialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AwsCredentialsResponse"
            }
          }
        },
        "description" : "AWS Credential"
      },
      "BulkCreationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkCreationResponse"
            }
          }
        },
        "description" : "Ids created by bulk operation"
      },
      "BulkResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkResponse"
            }
          }
        },
        "description" : "Ids created by bulk operation"
      },
      "CaptureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureListResponse"
            }
          }
        },
        "description" : "Capture list"
      },
      "CaptureResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CaptureWithMaterialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CategoryListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoryListResponse"
            }
          }
        },
        "description" : "Category list"
      },
      "CategoryResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoryResponse"
            }
          }
        },
        "description" : "Category"
      },
      "ClusterListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ClusterListResponse"
            }
          }
        },
        "description" : "Cluster list"
      },
      "ClusterResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ClusterResponse"
            }
          }
        },
        "description" : "Cluster"
      },
      "CustomPropertyListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomPropertyListResponse"
            }
          }
        },
        "description" : "CustomProperty list"
      },
      "CustomPropertyResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomPropertyResponse"
            }
          }
        },
        "description" : "CustomProperty"
      },
      "EntityParameterListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterListResponse"
            }
          }
        },
        "description" : "EntityParameter list"
      },
      "EntityParameterResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterResponse"
            }
          }
        },
        "description" : "EntityParameter"
      },
      "EventResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EventResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "LevelListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LevelListResponse"
            }
          }
        },
        "description" : "Level list"
      },
      "LevelResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LevelResponse"
            }
          }
        },
        "description" : "Level"
      },
      "MaskResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MaskResponse"
            }
          }
        },
        "description" : "Mask"
      },
      "MeshListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeshListResponse"
            }
          }
        },
        "description" : "Mesh list"
      },
      "MeshResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeshResponse"
            }
          }
        },
        "description" : "Mesh"
      },
      "MetaResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetaResponse"
            }
          }
        },
        "description" : "Meta information"
      },
      "PanoListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PanoListResponse"
            }
          }
        },
        "description" : "Pano list"
      },
      "PanoResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PanoResponse"
            }
          }
        },
        "description" : "Pano"
      },
      "PointcloudListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PointcloudListResponse"
            }
          }
        },
        "description" : "Pointcloud list"
      },
      "PointcloudResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PointcloudResponse"
            }
          }
        },
        "description" : "Pointcloud"
      },
      "ProgressListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProgressListResponse"
            }
          }
        },
        "description" : "Progress list"
      },
      "ProgressResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProgressResponse"
            }
          }
        },
        "description" : "Progress"
      },
      "RealityCaptureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RealityCaptureListResponse"
            }
          }
        },
        "description" : "Mesh list"
      },
      "RecordListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordListResponse"
            }
          }
        },
        "description" : "Record list"
      },
      "RecordResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordResponse"
            }
          }
        },
        "description" : "Record"
      },
      "RecordStatusListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordStatusListResponse"
            }
          }
        },
        "description" : "RecordStatus list"
      },
      "RecordStatusResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordStatusResponse"
            }
          }
        },
        "description" : "RecordStatus"
      },
      "ResourceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceListResponse"
            }
          }
        },
        "description" : "Resource list"
      },
      "ResourceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "SessionResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SessionResponse"
            }
          }
        },
        "description" : "Session"
      },
      "ShareListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareListResponse"
            }
          }
        },
        "description" : "Shared memeber list"
      },
      "StatusListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StatusListResponse"
            }
          }
        },
        "description" : "Status list"
      },
      "StatusResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StatusResponse"
            }
          }
        },
        "description" : "Status"
      },
      "TextureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TextureListResponse"
            }
          }
        },
        "description" : "Texture list"
      },
      "TextureResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TextureResponse"
            }
          }
        },
        "description" : "Texture"
      },
      "UploadCredentialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UploadCredentialResponse"
            }
          }
        },
        "description" : "S3 Upload Credential"
      },
      "VideoListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/VideoListResponse"
            }
          }
        },
        "description" : "Video list"
      },
      "VideoResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/VideoResponse"
            }
          }
        },
        "description" : "Video"
      },
      "WorkflowListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowListResponse"
            }
          }
        },
        "description" : "Workflow list"
      },
      "WorkflowResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowResponse"
            }
          }
        },
        "description" : "Workflow"
      },
      "WorkflowTextureIdListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
            }
          }
        },
        "description" : "Texture Ids for each Workflows"
      }
    },
    "schemas" : {
      "AccessibleEditorMenuAttribute" : {
        "properties" : {
          "bim_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "capture_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActionAttribute" : {
        "properties" : {
          "waiting_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "running_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Activity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Activity_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "AggsItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AllowedAnnotationKind" : {
        "items" : {
          "enum" : [ "acc", "acc_issue", "acc_rfi", "bim360", "bim360_issue", "bim360_rfi", "form", "link", "markup", "note", "plangrid_rfi", "plangrid_task", "procore_observation", "procore_punch_list", "procore_rfi", "voice", "procore", "plangrid" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "AnchorAttribute" : {
        "properties" : {
          "anchor_type" : {
            "type" : "string"
          },
          "anchor_position" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "anchor_id" : {
            "format" : "int64",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "AnnotationLayer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayer_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        } ]
      },
      "AnnotationLayerItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/AnnotationLayer"
          }
        },
        "type" : "object"
      },
      "AnnotationLayerList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationLayerItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AnnotationLayerListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayerListResponse_allOf"
        } ]
      },
      "AnnotationLayerResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayerResponse_allOf"
        } ]
      },
      "AppliedLicenseState" : {
        "enum" : [ "active", "expired", "none" ],
        "type" : "string"
      },
      "AuthenticateRequest" : {
        "properties" : {
          "grant_type" : {
            "enum" : [ "email", "refresh_token", "auth_params", "access_code" ],
            "type" : "string"
          },
          "team_domain" : {
            "description" : "Team domain name",
            "type" : "string"
          },
          "email" : {
            "description" : "User email",
            "format" : "email",
            "type" : "string"
          },
          "password" : {
            "description" : "User password",
            "type" : "string"
          },
          "refresh_token" : {
            "description" : "Refresh token",
            "type" : "string"
          },
          "token" : {
            "description" : "Session의 token",
            "type" : "string"
          },
          "signature" : {
            "description" : "Session의 signature",
            "type" : "string"
          },
          "signed_signature" : {
            "description" : "개인키를 사용하여 암호화 및 Base64 urlsafe encoding 한 Signature",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Session의 signature가 생성될 때 사용된 timestamp",
            "type" : "string"
          },
          "access_code" : {
            "description" : "특정 target(e.g., Capture)을 위한 access_code",
            "type" : "string"
          },
          "app_id" : {
            "description" : "Expiration이 긴 Session의 access token을 생성하기 위해 필요한 값",
            "type" : "string"
          },
          "expiration_days" : {
            "format" : "int64",
            "type" : "integer"
          },
          "otp_token" : {
            "description" : "6 digit one-time token",
            "type" : "string"
          },
          "api_token" : {
            "description" : "User api_token to create access token / refresh token",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AuthenticateResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AuthenticateResponse_allOf"
        } ]
      },
      "Authenticated" : {
        "properties" : {
          "grant_type" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "access_token_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh_token" : {
            "type" : "string"
          },
          "refresh_token_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AvailabilityState" : {
        "enum" : [ "pending", "available", "reset" ],
        "type" : "string"
      },
      "AvailableAttribute" : {
        "properties" : {
          "availability_state" : {
            "$ref" : "#/components/schemas/AvailabilityState"
          },
          "availability_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "AvatarUrls" : {
        "description" : "Avatar URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AwsCredentials" : {
        "properties" : {
          "aws_access_key_id" : {
            "type" : "string"
          },
          "aws_secret_access_key" : {
            "type" : "string"
          },
          "aws_session_token" : {
            "type" : "string"
          },
          "expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AwsCredentialsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AwsCredentialsResponse_allOf"
        } ]
      },
      "BillableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/TrialableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute_allOf"
        } ]
      },
      "BillingAccount" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/BillingAccountState"
          },
          "email" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BillingAccountAttribute" : {
        "properties" : {
          "billing_account" : {
            "$ref" : "#/components/schemas/BillingAccount"
          }
        },
        "type" : "object"
      },
      "BillingAccountState" : {
        "enum" : [ "initializing", "active", "inactive" ],
        "type" : "string"
      },
      "BillingInfo" : {
        "properties" : {
          "total_prepaid_credit" : {
            "format" : "int64",
            "type" : "integer"
          },
          "prepaid_credit_balance" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ondemand_credit_usage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "applied_product_codes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "contract_size" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_months" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_unit" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "unlimited_bim_pack" : {
            "type" : "boolean"
          },
          "pilot" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BillingState" : {
        "description" : "Billing state",
        "enum" : [ "none", "active", "expired", "archived" ],
        "type" : "string"
      },
      "Bim" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Bim_allOf"
        }, {
          "$ref" : "#/components/schemas/BimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/BimForgeAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "BimBounds" : {
        "items" : {
          "format" : "float",
          "type" : "number"
        },
        "type" : "array"
      },
      "BimForgeAttribute" : {
        "properties" : {
          "origin" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "offset" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "rotate_z" : {
            "format" : "float",
            "type" : "number"
          },
          "transform_order" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "BimGridSystemState" : {
        "description" : "Bim grid system state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "BimObject" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "BimRevision" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BimRevision_allOf"
        }, {
          "$ref" : "#/components/schemas/BimRevisionBimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/ImportedBimVersionAttribute"
        } ]
      },
      "BimRevisionBimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "BimSource" : {
        "enum" : [ "cupix", "bim360", "acc" ],
        "type" : "string"
      },
      "BimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "BulkActionType" : {
        "enum" : [ "create", "update", "delete" ],
        "type" : "string"
      },
      "BulkCategoryItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCategoryRequest"
        }, {
          "$ref" : "#/components/schemas/BulkCategoryItemRequest_allOf"
        } ]
      },
      "BulkCategoryRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkCategoryItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkCreationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BulkCreationResponse_allOf"
        } ]
      },
      "BulkCustomPropertyItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCustomPropertyRequest"
        }, {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        } ]
      },
      "BulkCustomPropertyRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkPanoItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest"
        }, {
          "$ref" : "#/components/schemas/BulkPanoItemRequest_allOf"
        } ]
      },
      "BulkPanoRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkPanoItemRequest"
            },
            "type" : "array"
          },
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "BulkProgressItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateProgressRequest"
        }, {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        } ]
      },
      "BulkProgressRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkProgressItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkRecordStatusItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
        }, {
          "$ref" : "#/components/schemas/BulkRecordStatusItemRequest_allOf"
        } ]
      },
      "BulkRecordStatusRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkRecordStatusItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BulkResponse_allOf"
        } ]
      },
      "BulkUpdatePanoItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest"
        }, {
          "$ref" : "#/components/schemas/BulkUpdatePanoItemRequest_allOf"
        } ]
      },
      "BulkUpdatePanoRequest" : {
        "properties" : {
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkUpdatePanoItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Camera" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "software" : {
            "type" : "string"
          },
          "serial_number" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CameraAttribute" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "CameraRequest" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "Capture" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Capture"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Capture_allOf"
        }, {
          "$ref" : "#/components/schemas/JobableAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/EfsAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/ReconstructionStateAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        } ]
      },
      "CaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "waiting", "ready", "holding", "editing", "in_review", "done", "skipped", "stopped", "re_ready" ],
        "type" : "string"
      },
      "CaptureInvokableState" : {
        "properties" : {
          "create_capture" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CaptureItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Capture"
          }
        },
        "type" : "object"
      },
      "CaptureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CaptureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CaptureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureListResponse_allOf"
        } ]
      },
      "CaptureResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureResponse_allOf"
        } ]
      },
      "CaptureSkatType" : {
        "enum" : [ "stable", "beta" ],
        "type" : "string"
      },
      "CaptureTypeAttribute" : {
        "properties" : {
          "capture_type" : {
            "type" : "string"
          },
          "creation_platform" : {
            "type" : "string"
          },
          "material" : {
            "type" : "string"
          },
          "migrated_from" : {
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "method" : {
            "type" : "string"
          },
          "singleshot_state" : {
            "type" : "string"
          },
          "singleshot_queued_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureTypeRequest" : {
        "properties" : {
          "singleshot_state" : {
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVersionsRequest" : {
        "properties" : {
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVideoMeta" : {
        "properties" : {
          "video_length" : {
            "format" : "float",
            "type" : "number"
          },
          "recording_fps" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Capture"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterials_allOf"
        } ]
      },
      "CaptureWithMaterialsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CaptureWithMaterials"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterialsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf"
        } ]
      },
      "Category" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Category_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CategoryItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Category"
          }
        },
        "type" : "object"
      },
      "CategoryList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CategoryItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CategoryListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CategoryListResponse_allOf"
        } ]
      },
      "CategoryResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CategoryResponse_allOf"
        } ]
      },
      "CategoryType" : {
        "enum" : [ "main", "sub" ],
        "type" : "string"
      },
      "CertifiedAttribute" : {
        "properties" : {
          "certifications" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ClearFieldsAttributes" : {
        "properties" : {
          "clear_fields" : {
            "description" : "comma separated strings",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Cluster" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Cluster_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "ClusterItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Cluster"
          }
        },
        "type" : "object"
      },
      "ClusterList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ClusterItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ClusterListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ClusterListResponse_allOf"
        } ]
      },
      "ClusterResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ClusterResponse_allOf"
        } ]
      },
      "ConstantableAttribute" : {
        "properties" : {
          "constants" : {
            "$ref" : "#/components/schemas/ConstantableAttribute_constants"
          }
        },
        "type" : "object"
      },
      "ConstantableReqeust" : {
        "properties" : {
          "set_constants" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ContentUrlType" : {
        "properties" : {
          "content_url_type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CopySubjectAttribute" : {
        "description" : "Copy states for Copyable model",
        "properties" : {
          "copy_state" : {
            "type" : "string"
          },
          "copy_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverState" : {
        "description" : "Cover State",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "CoverUrls" : {
        "description" : "Cover URLs",
        "properties" : {
          "large_high" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverUrlsAttribute" : {
        "properties" : {
          "cover_state" : {
            "$ref" : "#/components/schemas/CoverState"
          },
          "cover_upload_url" : {
            "type" : "string"
          },
          "cover_urls" : {
            "$ref" : "#/components/schemas/CoverUrls"
          }
        },
        "type" : "object"
      },
      "CreateAnnotationLayerRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAnnotationLayerRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateAllowedAnnotationKindRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "facility_key", "name" ]
      },
      "CreateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        } ]
      },
      "CreateCaptureResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "enum" : [ "processing_options", "structure_data", "ar_data", "motion_data", "alignments_all", "alignments_sampled", "tsdf", "reconstruction_result", "landmark" ],
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateCaptureWithMaterialsRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest"
        }, {
          "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf"
        } ]
      },
      "CreateCategoryBulkRequest" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateCategoryOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories" ],
        "type" : "object"
      },
      "CreateCategoryOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCategoryOnBulkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateCategoryRequest"
        } ]
      },
      "CreateCategoryRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCategoryRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateClusterRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateClusterRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "capture_id" ]
      },
      "CreateCustomEventRequest" : {
        "properties" : {
          "custom_reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          }
        },
        "required" : [ "custom_action_meta", "custom_reason" ],
        "type" : "object"
      },
      "CreateCustomPropertyBulkRequest" : {
        "properties" : {
          "custom_properties" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateCustomPropertyOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "custom_properties" ],
        "type" : "object"
      },
      "CreateCustomPropertyOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCustomPropertyOnBulkRequest_allOf"
        } ]
      },
      "CreateCustomPropertyRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCustomPropertyRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateEntityParameterRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          }
        },
        "required" : [ "data_type", "name", "source" ],
        "type" : "object"
      },
      "CreateLevelRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateLevelRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "facility_key" ]
      },
      "CreateMeshRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateMeshRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "CreatePanoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePanoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        } ]
      },
      "CreatePointcloudRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePointcloudRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/PointcloudTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "CreatePointcloudResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "enum" : [ "plane" ],
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateProgressBulkRequest" : {
        "properties" : {
          "progresses" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateProgressOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "progresses" ],
        "type" : "object"
      },
      "CreateProgressOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateProgressOnBulkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateProgressRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateProgressRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateRecordRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateRecordRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateRecordStatusBulkRequest" : {
        "properties" : {
          "record_statuses" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateRecordStatusOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "record_statuses" ],
        "type" : "object"
      },
      "CreateRecordStatusOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCategoryOnBulkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRecordStatusRequest"
        } ]
      },
      "CreateRecordStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateRecordStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "CreateRequestWithUUID" : {
        "properties" : {
          "uuid" : {
            "description" : "임의로 UUID를 입력할 수 있다. UUID 형식에 어긋나는 경우 ARG10040 오류를 낸다.",
            "type" : "string"
          },
          "skip_uuid_validation" : {
            "description" : "유효한 uuid를 입력하고, skip_uuid_validation이 true로 입력된 경우 UUID 중복체크를 하지 않는다.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "CreateStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusTypeCode"
        } ]
      },
      "CreateUploadUrlRequest" : {
        "properties" : {
          "option" : {
            "enum" : [ "move_out_resource", "merge_from" ],
            "type" : "string"
          },
          "option_params" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CreateVideoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateVideoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateWorkflowRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateWorkflowRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "CreateWorkflowTextureRequest" : {
        "properties" : {
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "texture_id" ],
        "type" : "object"
      },
      "CustomProperty" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomProperty_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "CustomPropertyAggsList" : {
        "properties" : {
          "progress" : {
            "$ref" : "#/components/schemas/AggsItem"
          }
        },
        "type" : "object"
      },
      "CustomPropertyItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CustomProperty"
          }
        },
        "type" : "object"
      },
      "CustomPropertyList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomPropertyItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CustomPropertyListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CustomPropertyListResponse_allOf"
        } ]
      },
      "CustomPropertyResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CustomPropertyResponse_allOf"
        } ]
      },
      "CustomerSuccessManagersAttribute" : {
        "properties" : {
          "customer_success_managers" : {
            "items" : {
              "$ref" : "#/components/schemas/User"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Customs" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "bim_attr_id" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "CyclableAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "cycle_state" : {
            "$ref" : "#/components/schemas/CycleState"
          },
          "cycle_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cycle_state_updated_by" : {
            "$ref" : "#/components/schemas/CyclableAttribute_cycle_state_updated_by"
          }
        },
        "type" : "object"
      },
      "CycleState" : {
        "enum" : [ "created", "archived", "archiving", "trashed" ],
        "type" : "string"
      },
      "DateRange" : {
        "properties" : {
          "from_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "to_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Deviation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Deviation_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        }, {
          "$ref" : "#/components/schemas/EfsAttribute"
        } ]
      },
      "DeviationResultAttribute" : {
        "properties" : {
          "bim_icp_tm" : {
            "type" : "object"
          },
          "use_bim_icp_tm" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "DeviationType" : {
        "enum" : [ "Pointcloud", "Texture", "Siteinsights", "Report" ],
        "type" : "string"
      },
      "DraftedAtAttribute" : {
        "properties" : {
          "drafted_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EditingDifficultyScoreAttribute" : {
        "description" : "Editing difficulty score",
        "properties" : {
          "editing_difficulty_score" : {
            "format" : "float",
            "type" : "number"
          }
        }
      },
      "EfsAttribute" : {
        "properties" : {
          "preprocessor_path" : {
            "type" : "string"
          },
          "skatmaster_path" : {
            "type" : "string"
          },
          "postprocessor_path" : {
            "type" : "string"
          },
          "deviationmaster_path" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityParameter" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameter_allOf"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        } ]
      },
      "EntityParameterGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameterGroup_allOf"
        } ]
      },
      "EntityParameterItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/EntityParameter"
          }
        },
        "type" : "object"
      },
      "EntityParameterList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EntityParameterItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "EntityParameterListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterListResponse_allOf"
        } ]
      },
      "EntityParameterResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterResponse_allOf"
        } ]
      },
      "EntityUpdatesValue" : {
        "format" : "date-time",
        "type" : "string"
      },
      "Entrypoint" : {
        "properties" : {
          "pano" : {
            "$ref" : "#/components/schemas/EntrypointPano"
          },
          "mesh" : {
            "$ref" : "#/components/schemas/EntrypointMesh"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/EntrypointPointcloud"
          }
        },
        "type" : "object"
      },
      "EntrypointMesh" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointModel" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntrypointPano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointPointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "ErrorCode" : {
        "description" : "Error code from server",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ErrorResponse_allOf"
        } ]
      },
      "EstimatedStatusDetailsAttribute" : {
        "properties" : {
          "coverage" : {
            "format" : "float",
            "type" : "number"
          },
          "average_error" : {
            "format" : "float",
            "type" : "number"
          },
          "deviation_vector" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Event" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Event_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "EventItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Event"
          }
        },
        "type" : "object"
      },
      "EventResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EventResponse_allOf"
        } ]
      },
      "Eventable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExpectedQualityAttribute" : {
        "properties" : {
          "expected_quality" : {
            "enum" : [ "dollhouse", "flexible" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Facility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Facility_allOf"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityCopyAttribute"
        }, {
          "$ref" : "#/components/schemas/CopySubjectAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySizeUnitAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySiteinsightsAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "FacilityCopyAttribute" : {
        "properties" : {
          "copied_from" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "sandbox_released_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdates" : {
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/FacilityEntityUpdates"
          }
        },
        "type" : "object"
      },
      "FacilitySiteinsightsAttribute" : {
        "properties" : {
          "siteinsights" : {
            "type" : "boolean"
          },
          "siteinsights_disabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_setup_qualified_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilitySizeUnitAttribute" : {
        "properties" : {
          "facility_size_unit" : {
            "enum" : [ "SQFT", "SQM" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FilesizeAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "filesize" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Firebase" : {
        "properties" : {
          "key" : {
            "type" : "string"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "FirebaseAttribute" : {
        "properties" : {
          "firebase" : {
            "$ref" : "#/components/schemas/Firebase"
          }
        },
        "type" : "object"
      },
      "Floorplan" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Floorplan_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/FloorplanCreationFromAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        }, {
          "$ref" : "#/components/schemas/CoverUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "FloorplanCreationFrom" : {
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "FloorplanCreationFromAttribute" : {
        "properties" : {
          "creation_from" : {
            "$ref" : "#/components/schemas/FloorplanCreationFrom"
          }
        },
        "type" : "object"
      },
      "FloorplanRequest" : {
        "properties" : {
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FloorplanSource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/FloorplanSource_allOf"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        } ]
      },
      "FloorplanState" : {
        "description" : "Floorplan state",
        "enum" : [ "created", "creating", "resource_uploading", "resource_missing", "processing", "error", "done" ],
        "type" : "string"
      },
      "FloorplanTile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanTile_items_inner"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FloorplanTileState" : {
        "description" : "Floorplan tile state",
        "enum" : [ "created", "pending", "uploading", "missing", "uploaded" ],
        "type" : "string"
      },
      "FloorplanType" : {
        "description" : "Type of Floorplan",
        "enum" : [ "image", "bim", "pdf", "procore", "plangrid", "bim360" ],
        "type" : "string"
      },
      "GeoCoordinate" : {
        "properties" : {
          "pos" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          },
          "quat" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Georeference" : {
        "properties" : {
          "epsg_code" : {
            "type" : "string"
          },
          "x" : {
            "type" : "string"
          },
          "y" : {
            "type" : "string"
          },
          "z" : {
            "type" : "string"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          },
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GeoreferenceAttribute" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GeoreferenceReqeust" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Gps" : {
        "properties" : {
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Group" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Group"
        }, {
          "$ref" : "#/components/schemas/Group_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/SignInMethodAttribute"
        } ]
      },
      "GroupCodesAttributes" : {
        "properties" : {
          "group_codes" : {
            "$ref" : "#/components/schemas/GroupCodesEnum"
          }
        },
        "type" : "object"
      },
      "GroupCodesEnum" : {
        "items" : {
          "enum" : [ "super_admin", "billing_admin", "administrators", "users", "workspace_creators", "technical_support_engineers", "facility_administrators", "assigned_customer_success_managers", "vendor", "administrator", "account_managers", "technical_support_engineer", "senior_editing_engineers", "editing_engineers", "accounting_department", "sandbox_creator", "customer_success_managers", "siteinsights_engineers", "everyone" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "GroupMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupMember_group"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "GroupType" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "maximum_user_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ImportedBimVersionAttribute" : {
        "properties" : {
          "import_bim_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InheritedFrom" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InvokeCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/InvokeRequest"
        } ]
      },
      "InvokePointcloudRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeRecordRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "JobableAttribute" : {
        "properties" : {
          "error_code" : {
            "type" : "string"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "processing_status" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LanguageCode" : {
        "enum" : [ "af", "ar", "zh", "da", "nl", "en", "fr", "fa", "de", "he", "hi", "id", "it", "jp", "ko", "ms", "pt", "ru", "es", "sv", "ta", "te", "th", "tr", "vi" ],
        "type" : "string"
      },
      "LastUpdatedUserAttribute" : {
        "properties" : {
          "last_updated_user" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "Level" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Level_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        } ]
      },
      "LevelItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object"
      },
      "LevelList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/LevelItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "LevelListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LevelListResponse_allOf"
        } ]
      },
      "LevelResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LevelResponse_allOf"
        } ]
      },
      "LicenseAttribute" : {
        "properties" : {
          "applied_license_state" : {
            "$ref" : "#/components/schemas/AppliedLicenseState"
          }
        },
        "type" : "object"
      },
      "LicenseTypeAttribute" : {
        "properties" : {
          "license_type" : {
            "enum" : [ "subscription", "project_license", "subscription_trial", "project_license_trial" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Locale" : {
        "description" : "Simple interface for ISO-639-1 language codes and ISO-3166-1-alpha-2 country codes",
        "enum" : [ "en-GB", "en-US", "en-AU", "en-CA", "ko-KR", "ja-JP" ],
        "type" : "string"
      },
      "LocaleAttribute" : {
        "properties" : {
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          }
        },
        "type" : "object"
      },
      "Location" : {
        "properties" : {
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "LocationAttribute" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LocationRequest" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LockState" : {
        "description" : "Lock 상태",
        "enum" : [ "active", "locked", "suspended" ],
        "type" : "string"
      },
      "LockStateAttribute" : {
        "properties" : {
          "lock_state" : {
            "$ref" : "#/components/schemas/LockState"
          },
          "lock_state_updated_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "lock_reason" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrls" : {
        "description" : "Logo URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrlsAttribute" : {
        "properties" : {
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          }
        },
        "type" : "object"
      },
      "Mask" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Mask_allOf"
        } ]
      },
      "MaskItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Mask"
          }
        },
        "type" : "object"
      },
      "MaskResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MaskResponse_allOf"
        } ]
      },
      "MaskType" : {
        "enum" : [ "face", "body", "facebody", "custom" ],
        "type" : "string"
      },
      "Maskable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MemberItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/MemberItem_attributes"
          }
        },
        "type" : "object"
      },
      "MemberList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MemberItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "Mesh" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Mesh_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "MeshItem" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Mesh"
          }
        },
        "type" : "object"
      },
      "MeshList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MeshItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "MeshListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeshListResponse_allOf"
        } ]
      },
      "MeshResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeshResponse_allOf"
        } ]
      },
      "MeshState" : {
        "enum" : [ "created", "uploading", "missing", "uploaded", "error" ],
        "type" : "string"
      },
      "MeshStateRequest" : {
        "enum" : [ "uploading", "uploaded", "error" ],
        "type" : "string"
      },
      "MetaRequest" : {
        "properties" : {
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MetaResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MetaResponse_allOf"
        } ]
      },
      "Node" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Node_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "OptOutAttribute" : {
        "properties" : {
          "opt_out" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pagination" : {
        "description" : "Pagination info.",
        "properties" : {
          "total_entries" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_pages" : {
            "format" : "int32",
            "type" : "integer"
          },
          "per_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "previous_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "current_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "next_page" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Pano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pano_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ActionAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/PanoRevisionAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PanoExif" : {
        "properties" : {
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif_exif"
          },
          "video" : {
            "$ref" : "#/components/schemas/PanoExif_video"
          }
        },
        "type" : "object"
      },
      "PanoItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Pano"
          }
        },
        "type" : "object"
      },
      "PanoList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PanoItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PanoListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PanoListResponse_allOf"
        } ]
      },
      "PanoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoOrigin" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PanoResponse_allOf"
        } ]
      },
      "PanoRevisionAttribute" : {
        "properties" : {
          "revision_type" : {
            "$ref" : "#/components/schemas/PanoRevisionType"
          },
          "enhanced_image_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PanoRevisionType" : {
        "enum" : [ "normal", "enhanced_image" ],
        "type" : "string"
      },
      "PanoType" : {
        "enum" : [ "still", "red", "green", "voice" ],
        "type" : "string"
      },
      "Permission" : {
        "enum" : [ "R", "RU", "RC", "RUC", "F", "M", "D" ],
        "type" : "string"
      },
      "PermissionAttribute" : {
        "properties" : {
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          }
        },
        "type" : "object"
      },
      "Phase" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Phase_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "Pointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pointcloud_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PointcloudItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Pointcloud"
          }
        },
        "type" : "object"
      },
      "PointcloudList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PointcloudItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PointcloudListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PointcloudListResponse_allOf"
        } ]
      },
      "PointcloudOctreeState" : {
        "description" : "Pointcloud octree state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "PointcloudPotreeState" : {
        "description" : "Pointcloud potree state",
        "enum" : [ "created", "processing", "uploading", "missing", "uploaded", "error" ],
        "type" : "string"
      },
      "PointcloudResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PointcloudResponse_allOf"
        } ]
      },
      "PointcloudType" : {
        "enum" : [ "uploaded", "3d_reconstructed", "all" ],
        "type" : "string"
      },
      "PointcloudTypeAttribute" : {
        "properties" : {
          "pointcloud_type" : {
            "$ref" : "#/components/schemas/PointcloudType"
          }
        },
        "type" : "object"
      },
      "PointsCountAttribute" : {
        "properties" : {
          "points_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PrimaryCsmAttribute" : {
        "properties" : {
          "primary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "ProcessingOptionsResource" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Progress" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Progress_allOf"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "ProgressAggsList" : {
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "bim" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "category" : {
            "$ref" : "#/components/schemas/AggsItem"
          }
        },
        "type" : "object"
      },
      "ProgressItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Progress"
          }
        },
        "type" : "object"
      },
      "ProgressList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ProgressItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ProgressListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ProgressListResponse_allOf"
        } ]
      },
      "ProgressResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ProgressResponse_allOf"
        } ]
      },
      "ProgressSiteInsightAttribute" : {
        "properties" : {
          "quantity" : {
            "format" : "float",
            "type" : "number"
          },
          "quantity_attribute_key" : {
            "type" : "string"
          },
          "mass_property" : {
            "format" : "float",
            "type" : "number"
          },
          "cost" : {
            "format" : "float",
            "type" : "number"
          },
          "bim_bounds" : {
            "$ref" : "#/components/schemas/BimBounds"
          },
          "customs" : {
            "$ref" : "#/components/schemas/Customs"
          },
          "bim_model_id" : {
            "type" : "integer"
          },
          "bim_element_id" : {
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          }
        },
        "type" : "object"
      },
      "PtsUnitType" : {
        "enum" : [ "ms" ],
        "type" : "string"
      },
      "PublicAccessEnabledAtAttribute" : {
        "properties" : {
          "public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PublishableAttribute" : {
        "properties" : {
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RealityCapture" : {
        "discriminator" : {
          "mapping" : {
            "Poitcloud" : "#/components/schemas/Pointcloud",
            "Mesh" : "#/components/schemas/Mesh"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Pointcloud"
        }, {
          "$ref" : "#/components/schemas/Mesh"
        } ]
      },
      "RealityCaptureItem" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/RealityCapture"
          }
        },
        "type" : "object"
      },
      "RealityCaptureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RealityCaptureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RealityCaptureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RealityCaptureListResponse_allOf"
        } ]
      },
      "ReconstructionStateAttribute" : {
        "properties" : {
          "reconstruction_state" : {
            "enum" : [ "none", "processing", "done", "error" ],
            "type" : "string"
          },
          "reconstruction_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Record" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Record_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ],
        "discriminator" : {
          "propertyName" : "recordType"
        }
      },
      "RecordActionState" : {
        "description" : "Record action state",
        "enum" : [ "required", "completed" ],
        "type" : "string"
      },
      "RecordItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Record"
          }
        },
        "type" : "object"
      },
      "RecordList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RecordItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RecordListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordListResponse_allOf"
        } ]
      },
      "RecordResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordResponse_allOf"
        } ]
      },
      "RecordStatus" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecordStatus_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "RecordStatusAggsList" : {
        "properties" : {
          "progress" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "record" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "status" : {
            "$ref" : "#/components/schemas/AggsItem"
          }
        },
        "type" : "object"
      },
      "RecordStatusItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/RecordStatus"
          }
        },
        "type" : "object"
      },
      "RecordStatusList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RecordStatusItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RecordStatusListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordStatusListResponse_allOf"
        } ]
      },
      "RecordStatusResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordStatusResponse_allOf"
        } ]
      },
      "Resource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Resource_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "ResourceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Resource"
          }
        },
        "type" : "object"
      },
      "ResourceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ResourceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ResourceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceListResponse_allOf"
        } ]
      },
      "ResourceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceResponse_allOf"
        } ]
      },
      "ResourceStateAttribute" : {
        "description" : "Resource State",
        "properties" : {
          "resource_state" : {
            "enum" : [ "created", "uploading", "missing", "uploaded" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Response" : {
        "properties" : {
          "result" : {
            "type" : "object"
          },
          "session" : {
            "$ref" : "#/components/schemas/Response_session"
          },
          "aggs" : {
            "nullable" : true,
            "type" : "object"
          }
        },
        "required" : [ "result", "session" ],
        "type" : "object"
      },
      "Review" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Review_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/DraftedAtAttribute"
        }, {
          "$ref" : "#/components/schemas/PublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "ReviewPublicAccessEnabledAtAttribute" : {
        "properties" : {
          "review_public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SalesforceAttribute" : {
        "properties" : {
          "sf_resource_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SecondaryCsmAttribute" : {
        "properties" : {
          "secondary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "SecurityAttribute" : {
        "properties" : {
          "review_publish_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayerItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayers" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedAnnotationLayers_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedAreas" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedBimItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedBims" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedBims_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedDateRanges" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/DateRange"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplanItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level" : {
            "$ref" : "#/components/schemas/SelectedFloorplanItem_level"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedFloorplans_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "default_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedItemIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedLevels" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedLevels_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedIds"
        } ]
      },
      "Session" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/SessionUserItem"
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamItem"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "expires_at" : {
            "description" : "현재 세션이 자동으로 만료되는 시각이며, token refresh 시 연장된다",
            "format" : "date-time",
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SessionItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Session"
          }
        },
        "type" : "object"
      },
      "SessionResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SessionResponse_allOf"
        } ]
      },
      "SessionUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "$ref" : "#/components/schemas/SessionUser_allOf"
        }, {
          "$ref" : "#/components/schemas/GroupCodesAttributes"
        } ]
      },
      "SessionUserItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SessionUser"
          }
        },
        "type" : "object"
      },
      "ShareListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ShareListResponse_allOf"
        } ]
      },
      "ShareRequest" : {
        "properties" : {
          "user_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "group_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "review_key" : {
            "type" : "string"
          },
          "emails" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "send_notification" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SignInMethodAttribute" : {
        "properties" : {
          "sign_in_methods" : {
            "items" : {
              "$ref" : "#/components/schemas/SignInMethods"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SignInMethods" : {
        "enum" : [ "email", "azure", "procore" ],
        "type" : "string"
      },
      "SiteinsightsReportAttribute" : {
        "properties" : {
          "siteinsights_reports_url" : {
            "$ref" : "#/components/schemas/SiteinsightsReportUrls"
          },
          "siteinsights_report_state" : {
            "type" : "string"
          },
          "siteinsights_report_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SiteinsightsReportUrls" : {
        "description" : "Siteinsights Report URLs",
        "properties" : {
          "progress" : {
            "type" : "string"
          },
          "record_status" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Sketch" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Sketch_allOf"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "Status" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Status_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        } ]
      },
      "StatusItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Status"
          }
        },
        "type" : "object"
      },
      "StatusKindAttribute" : {
        "properties" : {
          "kind" : {
            "enum" : [ "texture", "installation", "list", "number" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "StatusList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/StatusItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "StatusListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StatusListResponse_allOf"
        } ]
      },
      "StatusResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StatusResponse_allOf"
        } ]
      },
      "StatusType" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "code" : {
            "$ref" : "#/components/schemas/StatusTypeCode"
          }
        },
        "type" : "object"
      },
      "StatusTypeCode" : {
        "enum" : [ "complete", "incomplete", "misinstalled", "undetected", "unset" ],
        "type" : "string"
      },
      "Storage" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "s3_source_bucket_url" : {
            "type" : "string"
          },
          "s3_source_bucket_name" : {
            "type" : "string"
          },
          "s3_hosting_bucket_name" : {
            "type" : "string"
          },
          "s3_bucket_region" : {
            "type" : "string"
          },
          "s3_region_code" : {
            "type" : "string"
          },
          "cf_distribution_id" : {
            "type" : "string"
          },
          "cf_hostname" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "StorageAttribute" : {
        "properties" : {
          "storage" : {
            "$ref" : "#/components/schemas/Storage"
          }
        },
        "type" : "object"
      },
      "SystemEntitiesKind" : {
        "enum" : [ "system_defined", "normal" ],
        "type" : "string"
      },
      "SystemEntitiesKindAttribute" : {
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/SystemEntitiesKind"
          }
        },
        "type" : "object"
      },
      "Team" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Team"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/SecurityAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamBimPackAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/SignInMethodAttribute"
        }, {
          "$ref" : "#/components/schemas/CustomerSuccessManagersAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/PrimaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/SecondaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/ReviewPublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/AccessibleEditorMenuAttribute"
        }, {
          "$ref" : "#/components/schemas/TimezoneOffsetAttribute"
        }, {
          "$ref" : "#/components/schemas/LocaleAttribute"
        } ]
      },
      "TeamBimPackAttribute" : {
        "properties" : {
          "available_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdates" : {
        "properties" : {
          "form_design" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "form_field" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/TeamEntityUpdates"
          }
        },
        "type" : "object"
      },
      "TeamItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Team"
          }
        },
        "type" : "object"
      },
      "TeamState" : {
        "description" : "Team state",
        "enum" : [ "created", "initializing", "active", "expired" ],
        "type" : "string"
      },
      "Texture" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Texture_allOf"
        }, {
          "$ref" : "#/components/schemas/TextureStateAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "TextureItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Texture"
          }
        },
        "type" : "object"
      },
      "TextureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TextureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TextureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TextureListResponse_allOf"
        } ]
      },
      "TextureResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TextureResponse_allOf"
        } ]
      },
      "TextureState" : {
        "enum" : [ "untrained", "training", "trained" ],
        "type" : "string"
      },
      "TextureStateAttribute" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/TextureState"
          }
        },
        "type" : "object"
      },
      "ThumbnailUrls" : {
        "description" : "Thumbnail URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ThumbnailUrlsAttribute" : {
        "properties" : {
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          }
        },
        "type" : "object"
      },
      "Tile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TimezoneOffsetAttribute" : {
        "properties" : {
          "timezone_offset" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TranscriptLanguageAttribute" : {
        "properties" : {
          "transcript_language" : {
            "$ref" : "#/components/schemas/LanguageCode"
          }
        },
        "type" : "object"
      },
      "Transformation" : {
        "description" : "Transformation",
        "properties" : {
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "version" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TrialState" : {
        "description" : "Trial state",
        "enum" : [ "none", "active", "expired" ],
        "type" : "string"
      },
      "TrialableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrialableAttribute_allOf"
        } ]
      },
      "UUID" : {
        "description" : "UUID strings",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Unit" : {
        "description" : "Unit",
        "properties" : {
          "length" : {
            "enum" : [ "mm", "cm", "m", "ft", "in", "ft' in\"", "ftin" ],
            "type" : "string"
          },
          "area" : {
            "enum" : [ "sqmm", "sqcm", "sqm", "sqft", "sqin" ],
            "type" : "string"
          },
          "volume" : {
            "enum" : [ "m3", "cy", "ft3" ],
            "type" : "string"
          },
          "count" : {
            "enum" : [ "ea" ],
            "type" : "string"
          },
          "weight" : {
            "enum" : [ "g", "kg", "lb", "t" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UnitAttribute" : {
        "properties" : {
          "unit" : {
            "$ref" : "#/components/schemas/Unit"
          }
        },
        "type" : "object"
      },
      "UpdateAllowedAnnotationKindRequest" : {
        "properties" : {
          "allowed_annotation_kind" : {
            "$ref" : "#/components/schemas/AllowedAnnotationKind"
          }
        },
        "type" : "object"
      },
      "UpdateAnnotationLayerRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAnnotationLayerRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateAllowedAnnotationKindRequest"
        } ]
      },
      "UpdateAvailabilityStateRequest" : {
        "properties" : {
          "availability_state" : {
            "$ref" : "#/components/schemas/AvailabilityState"
          }
        },
        "type" : "object"
      },
      "UpdateCaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "ready", "holding", "editing", "in_review", "done", "re_ready", "stopped" ],
        "type" : "string"
      },
      "UpdateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeRequest"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        } ]
      },
      "UpdateCategoryBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateCategoryRequest"
        } ]
      },
      "UpdateCategoryBulkRequest" : {
        "properties" : {
          "update_categories" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateCategoryBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_category_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateCategoryRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCategoryRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "UpdateClusterParentRequest" : {
        "properties" : {
          "cluster_id" : {
            "description" : "Cluster ID",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateClusterRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateClusterRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateCustomPropertyBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateCustomPropertyRequest"
        } ]
      },
      "UpdateCustomPropertyBulkRequest" : {
        "properties" : {
          "update_custom_properties" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateCustomPropertyBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_custom_property_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateCustomPropertyRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCustomPropertyRequest_allOf"
        } ]
      },
      "UpdateLevelRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateLevelRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateMeshRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateMeshRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "UpdatePanoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/UpdatePanoRevisionRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        } ]
      },
      "UpdatePanoRevisionRequest" : {
        "properties" : {
          "revision_type" : {
            "$ref" : "#/components/schemas/PanoRevisionType"
          }
        },
        "type" : "object"
      },
      "UpdatePanoStitchRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoStitchRequest_allOf"
        } ]
      },
      "UpdatePointcloudRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePointcloudRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "UpdatePositionRequest" : {
        "properties" : {
          "position" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "UpdateProgressBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateProgressRequest"
        } ]
      },
      "UpdateProgressBulkRequest" : {
        "properties" : {
          "update_progresses" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateProgressBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_progress_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateProgressRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateProgressRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateRecordRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "UpdateRecordStatusBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkCustomPropertyItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
        } ]
      },
      "UpdateRecordStatusBulkRequest" : {
        "properties" : {
          "update_record_statuses" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_record_status_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateRecordStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "UpdateStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusTypeCode"
        } ]
      },
      "UpdateTagsRequest" : {
        "properties" : {
          "tags" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateThumbnailRequest" : {
        "properties" : {
          "thumbnail" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateUUIDRequest" : {
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateVideoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateVideoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateWorkflowRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkflowRequest_allOf"
        } ]
      },
      "UploadCredentialResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UploadCredentialResponse_allOf"
        } ]
      },
      "UploadCredentials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AwsCredentials"
        }, {
          "$ref" : "#/components/schemas/UploadCredentials_allOf"
        } ]
      },
      "UploadState" : {
        "enum" : [ "upload_ready", "upload_done", "pano_uploading", "invalid" ],
        "type" : "string"
      },
      "User" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.User"
        }, {
          "$ref" : "#/components/schemas/admin.User"
        }, {
          "$ref" : "#/components/schemas/User_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptLanguageAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        } ]
      },
      "UserMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserMember_user"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "Video" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Video_allOf"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "VideoItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Video"
          }
        },
        "type" : "object"
      },
      "VideoList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/VideoItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "VideoListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VideoListResponse_allOf"
        } ]
      },
      "VideoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VideoMeta" : {
        "properties" : {
          "version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VideoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VideoResponse_allOf"
        } ]
      },
      "Viewpoint" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "record_id" : {
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint_viewpoint"
          }
        },
        "type" : "object"
      },
      "VoxelState" : {
        "enum" : [ "aggregating", "error", "done" ],
        "type" : "string"
      },
      "Voxels" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "VoxelsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Voxels"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VoxelsResponse_allOf"
        } ]
      },
      "WarningAttribute" : {
        "properties" : {
          "warnings" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Workflow" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workflow_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "WorkflowItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Workflow"
          }
        },
        "type" : "object"
      },
      "WorkflowList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkflowItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkflowListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowListResponse_allOf"
        } ]
      },
      "WorkflowResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowResponse_allOf"
        } ]
      },
      "WorkflowTextureIdItem" : {
        "properties" : {
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "WorkflowTextureIdList" : {
        "items" : {
          "$ref" : "#/components/schemas/WorkflowTextureIdItem"
        },
        "type" : "array"
      },
      "WorkflowTextureIdListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowTextureIdListResponse_allOf"
        } ]
      },
      "WorkflowType" : {
        "enum" : [ "list", "number", "combined", "whole_installation", "partial_installation", "template" ],
        "type" : "string"
      },
      "Workspace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workspace_allOf"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        } ]
      },
      "admin.ReportTo" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.SalesInfo" : {
        "properties" : {
          "firstname_ko" : {
            "type" : "string"
          },
          "lastname_ko" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "title_ko" : {
            "type" : "string"
          },
          "phone_office" : {
            "type" : "string"
          },
          "phone_mobile" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "territory" : {
            "$ref" : "#/components/schemas/base.Territory"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.User" : {
        "discriminator" : {
          "propertyName" : "AdminUserType"
        },
        "properties" : {
          "sales_info" : {
            "$ref" : "#/components/schemas/admin.SalesInfo"
          },
          "report_to" : {
            "$ref" : "#/components/schemas/admin.ReportTo"
          }
        },
        "type" : "object"
      },
      "base.Capture" : {
        "discriminator" : {
          "propertyName" : "baseCaptureType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "upload_state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.Group" : {
        "discriminator" : {
          "propertyName" : "baseGroupType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "group_type" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "users_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.Team" : {
        "discriminator" : {
          "propertyName" : "baseTeamType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/TeamState"
          },
          "domain" : {
            "type" : "string"
          },
          "use_self_signup" : {
            "type" : "boolean"
          },
          "use_editing_support" : {
            "type" : "boolean"
          },
          "email_domain" : {
            "type" : "string"
          },
          "nadir_angle" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "deleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "workspaces_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "mfa_enabled" : {
            "type" : "boolean"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.Territory" : {
        "discriminator" : {
          "propertyName" : "adminTerritoryType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.User" : {
        "discriminator" : {
          "propertyName" : "baseUserType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          },
          "api_token" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Activity_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "activity_id" : {
            "type" : "string"
          },
          "activity_type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayer_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "allowed_annotation_kind" : {
            "$ref" : "#/components/schemas/AllowedAnnotationKind"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationLayerList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AnnotationLayerItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationLayerResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AuthenticateResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/Authenticated"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AwsCredentialsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AwsCredentials"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BillableAttribute_allOf" : {
        "properties" : {
          "plan" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "applied_billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_info" : {
            "$ref" : "#/components/schemas/BillingInfo"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Bim_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "resource_state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "encoded_forge_urn" : {
            "type" : "string"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "grid_system_state" : {
            "$ref" : "#/components/schemas/BimGridSystemState"
          },
          "grid_system_download_url" : {
            "type" : "string"
          },
          "grid_system_upload_url" : {
            "type" : "string"
          },
          "grid_system_enabled" : {
            "type" : "boolean"
          },
          "last_bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          },
          "bim_objects_url" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "fresh_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_entities_created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "default_3d_model" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevision_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "bim_comparison_state" : {
            "type" : "string"
          },
          "bim_revision_state" : {
            "type" : "string"
          },
          "bim_revision_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkCategoryItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkCreationResponse_allOf" : {
        "properties" : {
          "result" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkCustomPropertyItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkPanoItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "publish" : {
            "type" : "boolean"
          },
          "unpublish" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkRecordStatusItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkResponse_allOf" : {
        "properties" : {
          "result" : {
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkUpdatePanoItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "publish" : {
            "type" : "boolean"
          },
          "unpublish" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Capture_allOf" : {
        "properties" : {
          "capture_mode" : {
            "type" : "string"
          },
          "manual_align_type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "measure_ready_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          },
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          },
          "invokable_state" : {
            "$ref" : "#/components/schemas/CaptureInvokableState"
          },
          "incomplete_reason" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterials_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/VideoMaterialAttribute"
            },
            "type" : "array"
          },
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/PanoMaterialAttribute"
            },
            "type" : "array"
          },
          "processing_options_resource" : {
            "$ref" : "#/components/schemas/ProcessingOptionsResource"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Category_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Category"
          },
          "default_workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "source_category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CategoryList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CategoryItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CategoryResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Cluster_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "bucket" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "node" : {
            "$ref" : "#/components/schemas/Node"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "root_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ClusterList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ClusterItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ClusterResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConstantableAttribute_constants" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          }
        },
        "type" : "object"
      },
      "CreateAnnotationLayerRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_type" : {
            "deprecated" : true,
            "description" : "Use creation_platform, material, method, migrated_from instead of capture_type",
            "enum" : [ "web_uploaded_from_browser", "app_no_ar_video", "app_no_ar_singleshot", "app_no_ar_multishot", "migrated_from_einstein_v2", "migrated_from_tesla_v1" ],
            "type" : "string"
          },
          "creation_platform" : {
            "enum" : [ "web", "app", "eci", "spot", "cloud_connect" ],
            "type" : "string"
          },
          "material" : {
            "enum" : [ "pano", "video", "pointcloud", "video-pano" ],
            "type" : "string"
          },
          "method" : {
            "enum" : [ "singleshot", "multishot", "timelaps", "cupix_json", "reality_capture" ],
            "type" : "string"
          },
          "migrated_from" : {
            "enum" : [ "einstein-v2", "tesla-v1" ],
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "capture_mode" : {
            "enum" : [ "basic", "expert" ],
            "type" : "string"
          },
          "manual_align_type" : {
            "enum" : [ "auto", "cupix1", "cupix2" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "level_id", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateCaptureWithMaterialsRequest_allOf_videos" : {
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCaptureWithMaterialsRequest_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf_videos"
            },
            "type" : "array"
          },
          "pano" : {
            "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf_videos"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCategoryOnBulkRequest_allOf" : {
        "properties" : {
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCategoryRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facility_key" : {
            "type" : "string"
          },
          "source_category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "category_type", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateClusterRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCustomPropertyOnBulkRequest_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "required" : [ "progress_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateCustomPropertyRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "facility_key", "progress_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateLevelRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateMeshRequest_allOf" : {
        "properties" : {
          "record_id" : {
            "type" : "number"
          },
          "level_id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "level_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreatePanoRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "video_id" : {
            "description" : "Origin Video ID; video_id and pano_id is either-or",
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "description" : "Origin Pano ID; video_id and pano_id is either-or",
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "description" : "Required if capture material is video-pano.",
            "format" : "int64",
            "type" : "integer"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          }
        },
        "required" : [ "capture_id" ],
        "type" : "object",
        "example" : null
      },
      "CreatePointcloudRequest_allOf" : {
        "properties" : {
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "level_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateProgressOnBulkRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_object_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "activity_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "origin_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "required" : [ "name", "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateProgressRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "facility_key" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mass_property" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "facility_key", "name", "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateRecordRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "CreateRecordStatusRequest_allOf" : {
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "estimated_status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_validator_results" : {
            "type" : "object"
          }
        },
        "required" : [ "progress_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateStatusRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          }
        },
        "required" : [ "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateVideoRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          }
        },
        "required" : [ "capture_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkflowRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "workflow_type" : {
            "$ref" : "#/components/schemas/WorkflowType"
          },
          "is_system_workflow" : {
            "type" : "boolean"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "name", "workflow_type" ],
        "type" : "object",
        "example" : null
      },
      "CustomProperty_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "progress" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CustomPropertyList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/CustomPropertyAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CustomPropertyItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CustomPropertyResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CyclableAttribute_cycle_state_updated_by" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Deviation_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "deviation_state" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "deviation_type" : {
            "$ref" : "#/components/schemas/DeviationType"
          },
          "processing_option" : {
            "type" : "string"
          },
          "sampling_ratio" : {
            "format" : "float",
            "type" : "number"
          },
          "distance_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "depth_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "use_global_icp" : {
            "type" : "boolean"
          },
          "use_pointcloud_normal" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "deviation_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameter_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entity_parameter_group" : {
            "$ref" : "#/components/schemas/EntityParameterGroup"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterGroup_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "entity_id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "entity_type" : {
            "type" : "string"
          },
          "family" : {
            "type" : "string"
          },
          "is_admin_group" : {
            "type" : "boolean"
          },
          "is_system_group" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EntityParameterItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ErrorResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ErrorCode"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Event_allOf" : {
        "properties" : {
          "eventable" : {
            "$ref" : "#/components/schemas/Eventable"
          },
          "action" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "eventable_team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "linked_review" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EventItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EventResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Facility_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "last_captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          },
          "has_upload_candidates" : {
            "description" : "list에서는 항상 null을 반환하며, Get Facility 호출 시 true/false 중 반환한다.",
            "type" : "boolean"
          },
          "timezone_offset" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bims_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "records_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "levels_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reviews_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ground_level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "bim_pack" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "activity_type" : {
            "type" : "string"
          },
          "closed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "metric_name" : {
            "type" : "string"
          },
          "metric_unit" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Floorplan_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "source_filename" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/FloorplanState"
          },
          "tile_state" : {
            "$ref" : "#/components/schemas/FloorplanTileState"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_source" : {
            "$ref" : "#/components/schemas/FloorplanSource"
          },
          "floorplan_type" : {
            "$ref" : "#/components/schemas/FloorplanType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "revision" : {
            "format" : "int64",
            "type" : "integer"
          },
          "transformation" : {
            "$ref" : "#/components/schemas/Transformation"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/FloorplanTile"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resolution" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "real_distance_in_millimeters" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSource_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "pages" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanTile_items_inner" : {
        "properties" : {
          "z" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_y" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_x" : {
            "format" : "int32",
            "type" : "integer"
          },
          "pixel_size" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Group_allOf" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          }
        },
        "type" : "object",
        "example" : null
      },
      "GroupMember_group" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Level_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "default_floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          },
          "captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplans_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LevelList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LevelItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LevelResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Mask_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "mask_type" : {
            "$ref" : "#/components/schemas/MaskType"
          },
          "maskable" : {
            "$ref" : "#/components/schemas/Maskable"
          },
          "mask_upload_url" : {
            "type" : "string"
          },
          "mask_url" : {
            "type" : "string"
          },
          "mask_state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MaskResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MaskItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MaskResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MaskResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MemberItem_attributes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserMember"
        }, {
          "$ref" : "#/components/schemas/GroupMember"
        } ]
      },
      "Mesh_allOf" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "$ref" : "#/components/schemas/MeshState"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "mesh_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "resource_upload_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeshList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MeshItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeshResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MetaResponse_allOf" : {
        "properties" : {
          "result" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Node_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Pano_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "version" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "tile_state" : {
            "type" : "string"
          },
          "mask_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/PanoOrigin"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/Tile"
          },
          "mask_upload_url" : {
            "type" : "string"
          },
          "mask_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "stitched" : {
            "type" : "boolean"
          },
          "geo_coordinate" : {
            "$ref" : "#/components/schemas/GeoCoordinate"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at_from_meta" : {
            "format" : "int64",
            "type" : "integer"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoExif_exif" : {
        "properties" : {
          "CreateDate" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoExif_video" : {
        "properties" : {
          "creation_time" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PanoList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PanoItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PanoResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Phase_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "color_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Pointcloud_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "potree_state" : {
            "$ref" : "#/components/schemas/PointcloudPotreeState"
          },
          "potree_url" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resource_upload_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "processing_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "octree_state" : {
            "$ref" : "#/components/schemas/PointcloudOctreeState"
          },
          "octree_download_url" : {
            "type" : "string"
          },
          "octree_upload_url" : {
            "type" : "string"
          },
          "is_cluster_pano_unpublished" : {
            "type" : "boolean"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "entry_filename" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PointcloudList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PointcloudItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PointcloudResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Progress_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/Sketch"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "activity" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "bim_object" : {
            "$ref" : "#/components/schemas/BimObject"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "fresh_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record_completed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record_misinstalled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ProgressList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/ProgressAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ProgressItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ProgressResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RealityCaptureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RealityCaptureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Record_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "[Deprecated attribute] duplicates from note\n",
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captures_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "action_state" : {
            "$ref" : "#/components/schemas/RecordActionState"
          },
          "action_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "geo_coordinate_url" : {
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RecordItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatus_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "progress" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "estimated_status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "deviation" : {
            "$ref" : "#/components/schemas/Deviation"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "viewpoint" : {
            "type" : "object"
          },
          "texture_validator_results" : {
            "type" : "object"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordStatusList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/RecordStatusAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RecordStatusItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordStatusResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Resource_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ResourceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Response_session" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/Session"
        } ],
        "default" : null,
        "nullable" : true
      },
      "Review_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevels"
          },
          "areas" : {
            "$ref" : "#/components/schemas/SelectedAreas"
          },
          "date_ranges" : {
            "$ref" : "#/components/schemas/SelectedDateRanges"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "last_captured_record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entrypoint" : {
            "$ref" : "#/components/schemas/Entrypoint"
          },
          "annotation_layers" : {
            "$ref" : "#/components/schemas/SelectedAnnotationLayers"
          },
          "bims" : {
            "$ref" : "#/components/schemas/SelectedBims"
          },
          "floorplans" : {
            "$ref" : "#/components/schemas/SelectedFloorplans"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedAnnotationLayers_allOf" : {
        "properties" : {
          "annotation_layers" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedAnnotationLayerItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedBims_allOf" : {
        "properties" : {
          "bims" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedBimItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedFloorplanItem_level" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans_allOf" : {
        "properties" : {
          "floorplans" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedFloorplanItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedLevels_allOf" : {
        "properties" : {
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/Level"
            },
            "type" : "array"
          },
          "default_level" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SessionItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SessionResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionUser_allOf" : {
        "properties" : {
          "user_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ShareListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MemberList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Sketch_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "last_ifc_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "sketch_resource_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Status_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "meta" : {
            "type" : "object"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "status_type" : {
            "$ref" : "#/components/schemas/StatusType"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StatusList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/StatusItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StatusResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Texture_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "done_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_system_texture" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TextureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TextureItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TextureResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrialableAttribute_allOf" : {
        "properties" : {
          "applied_trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAnnotationLayerRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "review_key" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Capture name",
            "type" : "string"
          },
          "upload_state" : {
            "$ref" : "#/components/schemas/UploadState"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/UpdateCaptureEditingState"
          },
          "thumbnail" : {
            "description" : "Capture thumbnail",
            "format" : "binary",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "singleshot_state" : {
            "description" : "Capture singleshot state",
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "preview_align_available" : {
            "type" : "boolean"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "voxel_state" : {
            "$ref" : "#/components/schemas/VoxelState"
          },
          "processing_results" : {
            "type" : "object"
          },
          "description" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCategoryRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Category Name",
            "type" : "string"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateClusterRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Cluster name",
            "type" : "string"
          },
          "node_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCustomPropertyRequest_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateLevelRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Level name",
            "type" : "string"
          },
          "thumbnail" : {
            "description" : "Level thumbnail",
            "format" : "binary",
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          },
          "default_floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateMeshRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Mesh name",
            "type" : "string"
          },
          "record_id" : {
            "type" : "number"
          },
          "level_id" : {
            "type" : "number"
          },
          "mesh_state" : {
            "$ref" : "#/components/schemas/MeshStateRequest"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePanoRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Pano name",
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "error_code" : {
            "type" : "string"
          },
          "state" : {
            "enum" : [ "error" ],
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "geo_coordinate" : {
            "$ref" : "#/components/schemas/GeoCoordinate"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mask_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mask_type" : {
            "$ref" : "#/components/schemas/MaskType"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePanoStitchRequest_allOf" : {
        "properties" : {
          "original_panorama_format" : {
            "enum" : [ "equirectangular", "dual_fisheye" ],
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePointcloudRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Pointcloud name",
            "type" : "string"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "potree_state" : {
            "$ref" : "#/components/schemas/PointcloudPotreeState"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/UpdateCaptureEditingState"
          },
          "voxel_state" : {
            "$ref" : "#/components/schemas/VoxelState"
          },
          "entry_filename" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateProgressRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Progress Name",
            "type" : "string"
          },
          "category_id" : {
            "description" : "Category ID",
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "description" : "Workflow ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "description" : "Bim ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_object_id" : {
            "description" : "Bim Object ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "sketch_id" : {
            "description" : "Sketch ID",
            "format" : "int64",
            "type" : "integer"
          },
          "activity_id" : {
            "description" : "Activity ID",
            "format" : "int64",
            "type" : "integer"
          },
          "vendor_id" : {
            "description" : "Vendor ID",
            "format" : "int64",
            "type" : "integer"
          },
          "origin_id" : {
            "description" : "Origin Progress ID",
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateRecordRequest_allOf" : {
        "properties" : {
          "note" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateRecordStatusRequest_allOf" : {
        "properties" : {
          "value" : {
            "description" : "RecordStatus representative value",
            "type" : "string"
          },
          "status_id" : {
            "description" : "Status ID",
            "format" : "int64",
            "type" : "integer"
          },
          "estimated_status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          },
          "texture_validator_results" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateStatusRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "description" : "Status Represent Value",
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateVideoRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Video name",
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          },
          "meta" : {
            "$ref" : "#/components/schemas/VideoMeta"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkflowRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Workflow Name",
            "type" : "string"
          },
          "parent_id" : {
            "description" : "System Workflow Id",
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentialResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UploadCredentials"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentials_allOf" : {
        "properties" : {
          "basepath" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          },
          "bucket_name" : {
            "type" : "string"
          },
          "bucket_region" : {
            "type" : "string"
          },
          "acl" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "User_allOf" : {
        "properties" : {
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "current_workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "last_sign_in_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_email_notification" : {
            "type" : "boolean"
          },
          "use_push_notification" : {
            "type" : "boolean"
          },
          "editor_level" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserMember_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Video_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "meta" : {
            "$ref" : "#/components/schemas/VideoMeta"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VideoList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/VideoItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VideoResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Viewpoint_viewpoint" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "view_mode" : {
            "type" : "string"
          },
          "walk_mode" : {
            "type" : "boolean"
          },
          "ortho_mode" : {
            "type" : "boolean"
          },
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "pano" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/VoxelsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VoxelsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VoxelsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workflow_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "workflow_type" : {
            "$ref" : "#/components/schemas/WorkflowType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "system_workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "statuses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_system_workflow" : {
            "type" : "boolean"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkflowItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowTextureIdListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowTextureIdList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workspace_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "address" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          },
          "facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "archived_facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "id" ],
        "type" : "object",
        "example" : null
      }
    },
    "securitySchemes" : { }
  }
}